{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["PureComponent","createElement","createRef","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","MapContext","EventManager","MapController","deprecateWarn","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","string","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","InteractiveMap","supported","props","isLoaded","_staticMapRef","current","getMap","geometry","options","map","queryRenderedFeatures","interactionState","state","setState","width","height","_width","_height","_setControllerProps","onResize","viewState","oldViewState","onLoad","callbackName","_normalizeEvent","pointerType","_onEvent","features","_getFeatures","pos","point","radius","Boolean","length","isEntering","isExiting","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","_controller","_eventManager","_updateInteractiveContext","eventManager","mapContainer","_eventCanvasRef","setElement","on","pointerdown","_onPointerDown","pointermove","_onPointerMove","pointerup","_onPointerUp","pointerleave","bind","click","_onClick","anyclick","dblclick","wheel","contextmenu","nextProps","nextState","isInteractive","_onViewportChange","onStateChange","_onInteractionStateChange","setOptions","queryParams","layers","size","bbox","updatedContext","_interactiveContext","lngLat","offsetCenter","x","y","viewport","unproject","style","eventCanvasStyle","position","cursor","Provider","value","key","ref","_onResize","_onLoad","children"],"mappings":"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","sourcesContent":["// @flow\nimport {PureComponent, createElement, createRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {ViewState} from '../mapbox/mapbox';\nimport type {StaticMapProps} from './static-map';\nimport type {MjolnirEvent} from 'mjolnir.js';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) => isDragging ?\n  'grabbing' :\n  (isHovering ? 'pointer' : 'grab');\n\nconst defaultProps = Object.assign({},\n  StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\ntype InteractionState = {\n  isDragging: boolean,\n};\n\ntype MapEvent = MjolnirEvent & {\n  point: Array<number>,\n  lngLat: Array<number>,\n  features: ?Array<any>\n};\n\ntype InteractiveMapProps = StaticMapProps & {\n  onViewStateChange: Function,\n  onViewportChange: Function,\n  onInteractionStateChange: Function,\n  onHover: Function,\n  onClick: Function,\n  onNativeClick: Function,\n  onDblClick: Function,\n  onContextMenu: Function,\n  onMouseDown: Function,\n  onMouseMove: Function,\n  onMouseUp: Function,\n  onTouchStart: Function,\n  onTouchMove: Function,\n  onTouchEnd: Function,\n  onMouseEnter: Function,\n  onMouseLeave: Function,\n  onMouseOut: Function,\n  onWheel: Function,\n\n  transitionDuration: number,\n  transitionInterpolator: any,\n  transitionInterruption: number,\n  transitionEasing: Function,\n\n  scrollZoom: boolean,\n  dragPan: boolean,\n  dragRotate: boolean,\n  doubleClickZoom: boolean,\n  touchZoom: boolean,\n  touchRotate: boolean,\n  keyboard: boolean,\n\n  touchAction: string,\n  clickRadius: number,\n  interactiveLayerIds: Array<string>,\n  getCursor: Function,\n  controller: MapController\n};\n\ntype State = {\n  isLoaded: boolean,\n  isDragging: boolean,\n  isHovering: boolean\n};\n\ntype InteractiveContextProps = {\n  isDragging: boolean,\n  eventManager: any,\n  mapContainer: null | HTMLDivElement\n};\n\nexport default class InteractiveMap extends PureComponent<InteractiveMapProps, State> {\n\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props : InteractiveMapProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    // If props.controller is not provided, fallback to default MapController instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._controller = props.controller || new MapController();\n\n    this._eventManager = new EventManager(null, {\n      touchAction: props.touchAction\n    });\n\n    this._updateInteractiveContext({\n      isDragging: false,\n      eventManager: this._eventManager\n    });\n  }\n\n  state : State = {\n    // Whether mapbox styles have finished loading\n    isLoaded: false,\n    // Whether the cursor is down\n    isDragging: false,\n    // Whether the cursor is over a clickable feature\n    isHovering: false\n  };\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    const mapContainer = this._eventCanvasRef.current;\n    eventManager.setElement(mapContainer);\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      pointerdown: this._onPointerDown,\n      pointermove: this._onPointerMove,\n      pointerup: this._onPointerUp,\n      pointerleave: this._onEvent.bind(this, 'onMouseOut'),\n      click: this._onClick,\n      anyclick: this._onClick,\n      dblclick: this._onEvent.bind(this, 'onDblClick'),\n      wheel: this._onEvent.bind(this, 'onWheel'),\n      contextmenu: this._onEvent.bind(this, 'onContextMenu')\n    });\n\n    this._setControllerProps(this.props);\n\n    this._updateInteractiveContext({mapContainer});\n  }\n\n  componentWillUpdate(nextProps : InteractiveMapProps, nextState : State) {\n    this._setControllerProps(nextProps);\n\n    if (nextState.isDragging !== this.state.isDragging) {\n      this._updateInteractiveContext({isDragging: nextState.isDragging});\n    }\n  }\n\n  _controller : MapController;\n  _eventManager : any;\n  _interactiveContext : InteractiveContextProps;\n  _width : number = 0;\n  _height : number = 0;\n  _eventCanvasRef: { current: null | HTMLDivElement } = createRef();\n  _staticMapRef: { current: null | StaticMap } = createRef();\n\n  getMap = () => {\n    return this._staticMapRef.current ? this._staticMapRef.current.getMap() : null;\n  }\n\n  queryRenderedFeatures = (geometry : any, options : any = {}) => {\n    const map = this.getMap();\n    return map && map.queryRenderedFeatures(geometry, options);\n  }\n\n  _setControllerProps(props : InteractiveMapProps) {\n    props = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n      onViewportChange: this._onViewportChange,\n      onStateChange: this._onInteractionStateChange,\n      eventManager: this._eventManager,\n      width: this._width,\n      height: this._height\n    });\n\n    this._controller.setOptions(props);\n  }\n\n  _getFeatures({pos, radius} : {pos : Array<number>, radius : number}) {\n    let features;\n    const queryParams = {};\n    const map = this.getMap();\n\n    if (this.props.interactiveLayerIds) {\n      queryParams.layers = this.props.interactiveLayerIds;\n    }\n\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = map && map.queryRenderedFeatures(bbox, queryParams);\n    } else {\n      features = map && map.queryRenderedFeatures(pos, queryParams);\n    }\n    return features;\n  }\n\n  _onInteractionStateChange = (interactionState : InteractionState) => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n\n    const {onInteractionStateChange} = this.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  }\n\n  _updateInteractiveContext(updatedContext : $Shape<InteractiveContextProps>) {\n    this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\n  }\n\n  _onResize = ({width, height} : {width : number, height : number}) => {\n    this._width = width;\n    this._height = height;\n    this._setControllerProps(this.props);\n    this.props.onResize({width, height});\n  }\n\n  _onViewportChange = (\n    viewState : ViewState,\n    interactionState : InteractionState,\n    oldViewState : ViewState\n  ) => {\n    const {onViewStateChange, onViewportChange} = this.props;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  }\n\n  /* Generic event handling */\n  _normalizeEvent(event : MapEvent) {\n    if (event.lngLat) {\n      // Already unprojected\n      return event;\n    }\n\n    const {offsetCenter: {x, y}} = event;\n    const pos = [x, y];\n\n    // $FlowFixMe\n    const viewport = new WebMercatorViewport(Object.assign({}, this.props, {\n      width: this._width,\n      height: this._height\n    }));\n\n    event.point = pos;\n    event.lngLat = viewport.unproject(pos);\n\n    return event;\n  }\n\n  _onLoad = (event : MapEvent) => {\n    this.setState({isLoaded: true});\n    this.props.onLoad(event);\n  }\n\n  _onEvent = (callbackName : string, event : MapEvent) => {\n    const func = this.props[callbackName];\n    if (func) {\n      func(this._normalizeEvent(event));\n    }\n  }\n\n  /* Special case event handling */\n  _onPointerDown = (event : MapEvent) => {\n    switch (event.pointerType) {\n    case 'touch':\n      this._onEvent('onTouchStart', event);\n      break;\n\n    default:\n      this._onEvent('onMouseDown', event);\n    }\n  }\n\n  _onPointerUp = (event : MapEvent) => {\n    switch (event.pointerType) {\n    case 'touch':\n      this._onEvent('onTouchEnd', event);\n      break;\n\n    default:\n      this._onEvent('onMouseUp', event);\n    }\n  }\n\n  _onPointerMove = (event : MapEvent) => {\n    switch (event.pointerType) {\n    case 'touch':\n      this._onEvent('onTouchMove', event);\n      break;\n\n    default:\n      this._onEvent('onMouseMove', event);\n    }\n\n    if (!this.state.isDragging) {\n      const {onHover, interactiveLayerIds} = this.props;\n      let features;\n      event = this._normalizeEvent(event);\n      if (this.state.isLoaded && (interactiveLayerIds || onHover)) {\n        features = this._getFeatures({pos: event.point, radius: this.props.clickRadius});\n      }\n      if (onHover) {\n        // backward compatibility: v3 `onHover` interface\n        event.features = features;\n        onHover(event);\n      }\n\n      const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n      const isEntering = isHovering && !this.state.isHovering;\n      const isExiting = !isHovering && this.state.isHovering;\n\n      if (isEntering) {\n        this._onEvent('onMouseEnter', event);\n      }\n      if (isExiting) {\n        this._onEvent('onMouseLeave', event);\n      }\n      if (isEntering || isExiting) {\n        this.setState({isHovering});\n      }\n    }\n  }\n\n  _onClick = (event : MapEvent) => {\n    const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n    let callbacks = [];\n    const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n    // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n    // `click` has a delay period after pointer up that prevents it from firing when\n    // double clicking. `anyclick` is always fired immediately after pointer up.\n    // If double click is turned off by the user, we want to immediately fire the\n    // onClick event. Otherwise, we wait to make sure it's a single click.\n    switch (event.type) {\n    case 'anyclick':\n      callbacks.push(onNativeClick);\n      if (!isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    case 'click':\n      if (isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    default:\n    }\n\n    callbacks = callbacks.filter(Boolean);\n\n    if (callbacks.length) {\n      event = this._normalizeEvent(event);\n      // backward compatibility: v3 `onClick` interface\n      event.features = this._getFeatures({pos: event.point, radius: this.props.clickRadius});\n      callbacks.forEach(cb => cb(event));\n    }\n  }\n\n  render() {\n    const {width, height, style, getCursor} = this.props;\n\n    const eventCanvasStyle = Object.assign({position: 'relative'}, style, {\n      width,\n      height,\n      cursor: getCursor(this.state)\n    });\n\n    return createElement(MapContext.Provider, {value: this._interactiveContext},\n      createElement('div', {\n        key: 'event-canvas',\n        ref: this._eventCanvasRef,\n        style: eventCanvasStyle\n      },\n        createElement(StaticMap, Object.assign({}, this.props,\n          {\n            width: '100%',\n            height: '100%',\n            style: null,\n            onResize: this._onResize,\n            onLoad: this._onLoad,\n            ref: this._staticMapRef,\n            children: this.props.children\n          }\n        ))\n      )\n    );\n  }\n}\n"],"file":"interactive-map.js"}