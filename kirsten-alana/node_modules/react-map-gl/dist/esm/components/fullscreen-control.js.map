{"version":3,"sources":["../../../src/components/fullscreen-control.js"],"names":["document","PropTypes","BaseControl","createElement","mapboxgl","propTypes","Object","assign","className","string","container","object","defaultProps","FullscreenControl","props","nextState","_mapboxFullscreenControl","_fullscreen","setState","isFullscreen","_onClickFullscreen","state","_context","mapContainer","showButton","_checkFullscreenSupport","addEventListener","_fullscreenchange","_onFullscreenChange","removeEventListener","type","label","callback","children","key","title","onClick","ref","_containerRef","_renderButton"],"mappings":";;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,aAAR,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,WAAW,CAACG,SAA9B,EAAyC;AACzD;AACAG,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFoC;;AAGzD;AACA;AACA;;AACA;AACAC,EAAAA,SAAS,EAAET,SAAS,CAACU;AAPoC,CAAzC,CAAlB;AAUA,IAAMC,YAAY,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,WAAW,CAACU,YAA9B,EAA4C;AAC/DJ,EAAAA,SAAS,EAAE,EADoD;AAE/DE,EAAAA,SAAS,EAAE;AAFoD,CAA5C,CAArB;;IAKqBG,iB;;;;;AAKnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,kGA8BG,YAAM;AAC1B,UAAMC,SAAS,GAAG,CAAC,MAAKC,wBAAL,CAA8BC,WAAjD,CAD0B,CAE1B;AACA;;AACA,YAAKD,wBAAL,CAA8BC,WAA9B,GAA4CF,SAA5C;;AACA,YAAKG,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEJ;AAAf,OAAd;AACD,KApCkB;;AAAA,iGAsCE,YAAM;AACzB,YAAKC,wBAAL,CAA8BI,kBAA9B;AACD,KAxCkB;;AAGjB,UAAKJ,wBAAL,GAAgC,IAAhC;AAEA,UAAKK,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAE;AADH,KAAb;AALiB;AAQlB;;;;wCAEmB;AAClB,UAAMT,SAAS,GAAG,KAAKI,KAAL,CAAWJ,SAAX,IAAwB,KAAKY,QAAL,CAAcC,YAAxD;AAEA,WAAKP,wBAAL,GAAgC,IAAIZ,QAAQ,CAACS,iBAAb,CAA+B;AAACH,QAAAA,SAAS,EAATA;AAAD,OAA/B,CAAhC;AAEA,WAAKQ,QAAL,CAAc;AAACM,QAAAA,UAAU,EAAE,KAAKR,wBAAL,CAA8BS,uBAA9B;AAAb,OAAd;AAEAzB,MAAAA,QAAQ,CAAC0B,gBAAT,CACE,KAAKV,wBAAL,CAA8BW,iBADhC,EAEE,KAAKC,mBAFP;AAID;;;2CAEsB;AACrB5B,MAAAA,QAAQ,CAAC6B,mBAAT,CACE,KAAKb,wBAAL,CAA8BW,iBADhC,EAEE,KAAKC,mBAFP;AAID;;;kCAcaE,I,EAAMC,K,EAAOC,Q,EAAUC,Q,EAAU;AAC7C,aAAO9B,aAAa,CAAC,QAAD,EAAW;AAC7B+B,QAAAA,GAAG,EAAEJ,IADwB;AAE7BtB,QAAAA,SAAS,6CAAsCsB,IAAtC,CAFoB;AAG7BA,QAAAA,IAAI,EAAE,QAHuB;AAI7BK,QAAAA,KAAK,EAAEJ,KAJsB;AAK7BK,QAAAA,OAAO,EAAEJ,QALoB;AAM7BC,QAAAA,QAAQ,EAARA;AAN6B,OAAX,CAApB;AAQD;;;8BAES;AACR,UAAI,CAAC,KAAKZ,KAAL,CAAWG,UAAhB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAHO,UAKDhB,SALC,GAKY,KAAKM,KALjB,CAKDN,SALC;AAAA,UAMDW,YANC,GAMe,KAAKE,KANpB,CAMDF,YANC;AAQR,UAAMW,IAAI,GAAGX,YAAY,GAAG,QAAH,GAAc,YAAvC;AAEA,aAAOhB,aAAa,CAAC,KAAD,EAAQ;AAC1BK,QAAAA,SAAS,8CAAuCA,SAAvC,CADiB;AAE1B6B,QAAAA,GAAG,EAAE,KAAKC;AAFgB,OAAR,EAGjB,CACD,KAAKC,aAAL,CAAmBT,IAAnB,EAAyB,mBAAzB,EAA8C,KAAKV,kBAAnD,CADC,CAHiB,CAApB;AAMD;;;;EA1E4ClB,W;;gBAA1BW,iB,eAEAR,S;;gBAFAQ,iB,kBAGGD,Y;;SAHHC,iB","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {document} from '../utils/globals';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\nimport {createElement} from 'react';\nimport mapboxgl from '../utils/mapboxgl';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  /* eslint-disable max-len */\n  // `container` is the [compatible DOM element](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen#Compatible_elements)\n  // which should be made full screen. By default, the map container element will be made full screen.\n  /* eslint-enable max-len */\n  container: PropTypes.object\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  container: null\n});\n\nexport default class FullscreenControl extends BaseControl {\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props) {\n    super(props);\n\n    this._mapboxFullscreenControl = null;\n\n    this.state = {\n      isFullscreen: false\n    };\n  }\n\n  componentDidMount() {\n    const container = this.props.container || this._context.mapContainer;\n\n    this._mapboxFullscreenControl = new mapboxgl.FullscreenControl({container});\n\n    this.setState({showButton: this._mapboxFullscreenControl._checkFullscreenSupport()});\n\n    document.addEventListener(\n      this._mapboxFullscreenControl._fullscreenchange,\n      this._onFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      this._mapboxFullscreenControl._fullscreenchange,\n      this._onFullscreenChange\n    );\n  }\n\n  _onFullscreenChange = () => {\n    const nextState = !this._mapboxFullscreenControl._fullscreen;\n    // this is a hack\n    // Mapbox use `_fullscreen` flag to toggle fullscreen mode\n    this._mapboxFullscreenControl._fullscreen = nextState;\n    this.setState({isFullscreen: nextState});\n  };\n\n  _onClickFullscreen = () => {\n    this._mapboxFullscreenControl._onClickFullscreen();\n  };\n\n  _renderButton(type, label, callback, children) {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      type: 'button',\n      title: label,\n      onClick: callback,\n      children\n    });\n  }\n\n  _render() {\n    if (!this.state.showButton) {\n      return null;\n    }\n\n    const {className} = this.props;\n    const {isFullscreen} = this.state;\n\n    const type = isFullscreen ? 'shrink' : 'fullscreen';\n\n    return createElement('div', {\n      className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n      ref: this._containerRef\n    }, [\n      this._renderButton(type, 'Toggle fullscreen', this._onClickFullscreen)\n    ]);\n  }\n}\n"],"file":"fullscreen-control.js"}