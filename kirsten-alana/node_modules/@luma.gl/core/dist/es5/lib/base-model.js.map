{"version":3,"sources":["../../../src/lib/base-model.js"],"names":["LOG_DRAW_PRIORITY","LOG_DRAW_TIMEOUT","DEPRECATED_PICKING_UNIFORMS","BaseModel","gl","props","id","lastLogTime","initialize","_setBaseModelProps","program","_createProgram","vertexArray","VertexArray","userData","needsRedraw","_attributes","attributes","animatedUniforms","animated","animationLoop","timerQueryEnabled","timeElapsedQuery","undefined","lastQueryReturned","stats","accumulatedFrameTime","averageFrameTime","profileFrameCount","pickable","setUniforms","Object","assign","getModuleUniforms","moduleSettings","key","getUniforms","uniforms","_extractAnimatedUniforms","_checkForDeprecatedUniforms","opts","framebuffer","transformFeedback","parameters","animationProps","setAttributes","updateModuleSettings","_refreshAnimationProps","logPriority","_logDrawCallStart","drawParams","getDrawParams","isInstanced","log","warn","isIndexed","indexType","indexOffset","instanceCount","noop","onBeforeRender","onAfterRender","_timerQueryStart","didDraw","draw","drawMode","getDrawMode","vertexCount","getVertexCount","offset","_timerQueryEnd","_logDrawCallEnd","discard","feedbackBuffers","unbindModels","_setFeedbackBuffers","forEach","model","unbindBuffers","bindBuffers","Query","isSupported","_setAnimationProps","_animationProps","_animationLoop","vs","fs","modules","defines","inject","shaderCache","varyings","bufferMode","x","MODULAR_SHADERS","assembleResult","getProgram","Program","uniform","deprecated","uniformName","valueFunction","foundAnimated","newValue","staticUniforms","beginTimeElapsedQuery","end","isResultAvailable","elapsedTime","getTimerMilliseconds","lastFrameTime","priority","logDrawTimeout","Date","now","group","collapsed","attributeTable","header","uniformTable","table","unusedTable","unusedCount","undefinedOnly","missingTable","missingCount","count","keys","configTable","configuration","message","groupEnd"],"mappings":"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","sourcesContent":["// Shared code between Model and MeshModel\n\nimport GL from '@luma.gl/constants';\nimport {isWebGL, Query, Program, VertexArray, clear} from '@luma.gl/webgl';\nimport {MODULAR_SHADERS, assembleShaders} from '@luma.gl/shadertools';\nimport {\n  getDebugTableForUniforms,\n  getDebugTableForVertexArray,\n  getDebugTableForProgramConfiguration\n} from '@luma.gl/webgl';\nimport {addModel, removeModel, logModel, getOverrides} from '../debug/seer-integration';\nimport {log, isObjectEmpty, uid, assert} from '../utils';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\n// These old picking uniforms should be avoided and we should use picking module\n// and set uniforms using Model class 'updateModuleSettings()'\n// TODO - move to shader modules\nconst DEPRECATED_PICKING_UNIFORMS = ['renderPickingBuffer', 'pickingEnabled'];\n\n// Model abstract O3D Class\nexport default class BaseModel {\n  constructor(gl, props = {}) {\n    assert(isWebGL(gl));\n    const {id = uid('base-model')} = props;\n    this.id = id;\n    this.gl = gl;\n    this.id = props.id || uid('Model');\n    this.lastLogTime = 0; // TODO - move to probe.gl\n    this.initialize(props);\n    this._setBaseModelProps(props);\n  }\n\n  initialize(props = {}) {\n    this.props = {};\n    this.program = this._createProgram(props);\n\n    // Create a vertex array configured after this program\n    this.vertexArray = new VertexArray(this.gl, {program: this.program});\n\n    // Initialize state\n    this.userData = {};\n    this.needsRedraw = true;\n\n    // Attributes and buffers\n    // Model manages auto Buffer creation from typed arrays\n    this._attributes = {}; // All attributes\n    this.attributes = {}; // User defined attributes\n\n    // Model manages uniform animation\n    this.animatedUniforms = {};\n    this.animated = false;\n    this.animationLoop = null; // if set, used as source for animationProps\n\n    this.timerQueryEnabled = false;\n    this.timeElapsedQuery = undefined;\n    this.lastQueryReturned = true;\n\n    this.stats = {\n      accumulatedFrameTime: 0,\n      averageFrameTime: 0,\n      profileFrameCount: 0\n    };\n\n    // picking options\n    this.pickable = true;\n\n    this._setBaseModelProps(props);\n\n    // Make sure we have some reasonable default uniforms in place\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms(), // Get all default uniforms\n        this.getModuleUniforms(props.moduleSettings) // Get unforms for supplied parameters\n      )\n    );\n  }\n\n  setProps(props) {\n    this._setBaseModelProps(props);\n  }\n\n  delete() {\n    // delete all attributes created by this model\n    // TODO - should buffer deletes be handled by vertex array?\n    for (const key in this._attributes) {\n      if (this._attributes[key] !== this.attributes[key]) {\n        this._attributes[key].delete();\n      }\n    }\n\n    this.program.delete();\n    this.vertexArray.delete();\n\n    removeModel(this.id);\n  }\n\n  destroy() {\n    this.delete();\n  }\n\n  // GETTERS\n\n  isAnimated() {\n    return this.animated;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getUniforms() {\n    return this.program.getUniforms();\n  }\n\n  // SETTERS\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}) {\n    // Let Seer override edited uniforms\n    uniforms = Object.assign({}, uniforms);\n    getOverrides(this.id, uniforms);\n\n    // Resolve any animated uniforms so that we have an initial value\n    uniforms = this._extractAnimatedUniforms(uniforms);\n\n    this.program.setUniforms(uniforms, () => {\n      // if something changed\n      this._checkForDeprecatedUniforms(uniforms);\n    });\n\n    return this;\n  }\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts || {});\n    return this.setUniforms(uniforms);\n  }\n\n  // DRAW CALLS\n\n  clear(opts) {\n    clear(this.program.gl, opts);\n    return this;\n  }\n\n  /* eslint-disable max-statements  */\n  drawGeometry(opts = {}) {\n    const {\n      moduleSettings = null,\n      framebuffer,\n      uniforms = {},\n      attributes = {},\n      transformFeedback = this.transformFeedback,\n      parameters = {},\n      vertexArray = this.vertexArray,\n      animationProps\n    } = opts;\n\n    // Update module settings\n\n    addModel(this);\n\n    // Update model with any just provided attributes, settings or uniforms\n    this.setAttributes(attributes);\n    this.updateModuleSettings(moduleSettings);\n    this.setUniforms(uniforms);\n\n    // Animate any function valued uniforms\n    this._refreshAnimationProps(animationProps);\n\n    const logPriority = this._logDrawCallStart(2);\n\n    const drawParams = this.vertexArray.getDrawParams(this.props);\n    if (drawParams.isInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model', this.id)();\n    }\n\n    const {isIndexed, indexType, indexOffset} = drawParams;\n    const {isInstanced, instanceCount} = this;\n\n    const noop = () => {};\n    const {onBeforeRender = noop, onAfterRender = noop} = this.props;\n\n    onBeforeRender();\n\n    this._timerQueryStart();\n\n    const didDraw = this.program.draw(\n      Object.assign({}, opts, {\n        logPriority,\n        uniforms: null, // Already set (may contain \"function values\" not understood by Program)\n        framebuffer,\n        parameters,\n        drawMode: this.getDrawMode(),\n        vertexCount: this.getVertexCount(),\n        vertexArray,\n        transformFeedback,\n        isIndexed,\n        indexType,\n        isInstanced,\n        instanceCount,\n        offset: isIndexed ? indexOffset : 0\n      })\n    );\n\n    this._timerQueryEnd();\n\n    onAfterRender();\n\n    this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n\n    return didDraw;\n  }\n  /* eslint-enable max-statements  */\n\n  // Draw call for transform feedback\n  transform(opts = {}) {\n    const {discard = true, feedbackBuffers, unbindModels = []} = opts;\n\n    let {parameters} = opts;\n\n    if (feedbackBuffers) {\n      this._setFeedbackBuffers(feedbackBuffers);\n    }\n\n    if (discard) {\n      parameters = Object.assign({}, parameters, {[GL.RASTERIZER_DISCARD]: discard});\n    }\n\n    unbindModels.forEach(model => model.vertexArray.unbindBuffers());\n    try {\n      this.draw(Object.assign({}, opts, {parameters}));\n    } finally {\n      unbindModels.forEach(model => model.vertexArray.bindBuffers());\n    }\n\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  // eslint-disable-next-line max-statements, complexity\n  _setBaseModelProps(props) {\n    Object.assign(this.props, props);\n\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms);\n    }\n\n    if ('pickable' in props) {\n      this.pickable = props.pickable;\n    }\n\n    // if ('onBeforeRender' in props) {}\n    // if ('onAfterRender' in props) {}\n\n    // Experimental props\n    if ('timerQueryEnabled' in props) {\n      this.timerQueryEnabled = props.timerQueryEnabled && Query.isSupported(this.gl, ['timers']);\n      if (props.timerQueryEnabled && !this.timerQueryEnabled) {\n        log.warn('GPU timer not supported')();\n      }\n    }\n\n    if ('_animationProps' in props) {\n      this._setAnimationProps(props._animationProps);\n    }\n\n    if ('_animationLoop' in props) {\n      this.animationLoop = props._animationLoop;\n    }\n  }\n\n  _createProgram({\n    vs = null,\n    fs = null,\n    // 1: Modular shaders\n    modules = null,\n    defines = {},\n    inject = {},\n    shaderCache = null,\n    // TransformFeedback\n    varyings = null,\n    bufferMode = GL.SEPARATE_ATTRIBS,\n    program = null\n  }) {\n    this.getModuleUniforms = x => {};\n\n    const id = this.id;\n\n    if (!program) {\n      // Assign default shaders if none are provided\n      vs = vs || MODULAR_SHADERS.vs;\n      fs = fs || MODULAR_SHADERS.fs;\n\n      const assembleResult = assembleShaders(this.gl, {vs, fs, modules, inject, defines, log});\n      ({vs, fs} = assembleResult);\n\n      if (shaderCache) {\n        program = shaderCache.getProgram(this.gl, {id, vs, fs});\n      } else {\n        program = new Program(this.gl, {id, vs, fs, varyings, bufferMode});\n      }\n\n      this.getModuleUniforms = assembleResult.getUniforms || (x => {});\n    }\n\n    assert(program instanceof Program, 'Model needs a program');\n    return program;\n  }\n\n  // Uniforms\n\n  _checkForDeprecatedUniforms(uniforms) {\n    // deprecated picking uniforms\n    DEPRECATED_PICKING_UNIFORMS.forEach(uniform => {\n      if (uniform in uniforms) {\n        log.deprecated(\n          uniform,\n          'use picking shader module and Model class updateModuleSettings()'\n        )();\n      }\n    });\n  }\n\n  // Refreshes animated uniforms, attempting to get animated props from animationLoop if registered\n  _refreshAnimationProps(animationProps) {\n    // Try to read animationProps\n    animationProps = animationProps || (this.animationLoop && this.animationLoop.animationProps);\n    if (animationProps) {\n      this._setAnimationProps(animationProps);\n    }\n  }\n\n  // Calculate new values for any function uniforms based on supplied animationProps\n  _evaluateAnimateUniforms(animationProps) {\n    if (!this.animated) {\n      return {};\n    }\n    const animatedUniforms = {};\n    for (const uniformName in this.animatedUniforms) {\n      const valueFunction = this.animatedUniforms[uniformName];\n      animatedUniforms[uniformName] = valueFunction(animationProps);\n    }\n    return animatedUniforms;\n  }\n\n  // Extracts a list of function valued uniforms, so we can update them before each draw call\n  // Also removes such uniforms from the returned list\n  _extractAnimatedUniforms(uniforms) {\n    let foundAnimated = false;\n\n    // Keep our animatedUniforms map up-to-date\n    for (const uniformName in uniforms) {\n      const newValue = uniforms[uniformName];\n      if (typeof newValue === 'function') {\n        this.animatedUniforms[uniformName] = newValue;\n        foundAnimated = true;\n      } else {\n        delete this.animatedUniforms[uniformName];\n      }\n    }\n\n    // Update animated flag: `Model` is animated if any uniforms are animated (i.e. functions)\n    this.animated = !isObjectEmpty(this.animatedUniforms);\n\n    if (!foundAnimated) {\n      return uniforms;\n    }\n\n    // If animated uniforms were found, remove them from ordinary uniform list\n    // `Program` class can't (and shouldn't) handle function valued uniforms\n    const staticUniforms = {};\n    for (const uniformName in uniforms) {\n      if (!this.animatedUniforms[uniformName]) {\n        staticUniforms[uniformName] = uniforms[uniformName];\n      }\n    }\n    return staticUniforms;\n  }\n\n  // Timer Queries\n\n  _timerQueryStart() {\n    if (this.timerQueryEnabled === true) {\n      if (!this.timeElapsedQuery) {\n        this.timeElapsedQuery = new Query(this.gl);\n      }\n      if (this.lastQueryReturned) {\n        this.lastQueryReturned = false;\n        this.timeElapsedQuery.beginTimeElapsedQuery();\n      }\n    }\n  }\n\n  _timerQueryEnd() {\n    if (this.timerQueryEnabled === true) {\n      this.timeElapsedQuery.end();\n      // TODO: Skip results if 'gl.getParameter(this.ext.GPU_DISJOINT_EXT)' returns false\n      // should this be incorporated into Query object?\n      if (this.timeElapsedQuery.isResultAvailable()) {\n        this.lastQueryReturned = true;\n        const elapsedTime = this.timeElapsedQuery.getTimerMilliseconds();\n\n        // Update stats (e.g. for seer)\n        this.stats.lastFrameTime = elapsedTime;\n        this.stats.accumulatedFrameTime += elapsedTime;\n        this.stats.profileFrameCount++;\n        this.stats.averageFrameTime =\n          this.stats.accumulatedFrameTime / this.stats.profileFrameCount;\n\n        // Log stats\n        log.log(\n          LOG_DRAW_PRIORITY,\n          `\\\nGPU time ${this.program.id}: ${this.stats.lastFrameTime}ms \\\naverage ${this.stats.averageFrameTime}ms \\\naccumulated: ${this.stats.accumulatedFrameTime}ms \\\ncount: ${this.stats.profileFrameCount}`\n        )();\n      }\n    }\n  }\n\n  _logDrawCallStart(priority) {\n    const logDrawTimeout = priority > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.priority < priority || Date.now() - this.lastLogTime < logDrawTimeout) {\n      return undefined;\n    }\n\n    this.lastLogTime = Date.now();\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.priority <= 2})();\n\n    return priority;\n  }\n\n  _logDrawCallEnd(priority, vertexArray, uniforms, framebuffer) {\n    // HACK: priority === undefined means logDrawCallStart didn't run\n    if (priority === undefined) {\n      return;\n    }\n\n    const attributeTable = getDebugTableForVertexArray({\n      vertexArray,\n      header: `${this.id} attributes`,\n      attributes: this._attributes\n    });\n\n    const {table: uniformTable, unusedTable, unusedCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms)\n    });\n\n    // log missing uniforms\n    const {table: missingTable, count: missingCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms),\n      undefinedOnly: true\n    });\n\n    if (missingCount > 0) {\n      log.log('MISSING UNIFORMS', Object.keys(missingTable))();\n      // log.table(priority, missingTable)();\n    }\n    if (unusedCount > 0) {\n      log.log('UNUSED UNIFORMS', Object.keys(unusedTable))();\n      // log.log(priority, 'Unused uniforms ', unusedTable)();\n    }\n\n    const configTable = getDebugTableForProgramConfiguration(this.vertexArray.configuration);\n\n    log.table(priority, attributeTable)();\n\n    log.table(priority, uniformTable)();\n\n    log.table(priority + 1, configTable)();\n\n    logModel(this, uniforms);\n\n    if (framebuffer) {\n      framebuffer.log({priority: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    log.groupEnd(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`)();\n  }\n}\n"],"file":"base-model.js"}