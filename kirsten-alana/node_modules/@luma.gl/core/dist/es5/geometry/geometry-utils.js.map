{"version":3,"sources":["../../../src/geometry/geometry-utils.js"],"names":["unpackIndexedGeometry","geometry","indices","attributes","POSITION","NORMAL","TEXCOORD_0","unpackedPositions","Float32Array","length","unpackedNormals","unpackedTexCoords","x","index"],"mappings":";;;;;;;AACO,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AAAA,MACvCC,OADuC,GAChBD,QADgB,CACvCC,OADuC;AAAA,MAC9BC,UAD8B,GAChBF,QADgB,CAC9BE,UAD8B;;AAE9C,MAAI,CAACD,OAAL,EAAc;AACZ,WAAOD,QAAP;AACD;;AAJ6C,MAMvCG,QANuC,GAMPD,UANO,CAMvCC,QANuC;AAAA,MAM7BC,MAN6B,GAMPF,UANO,CAM7BE,MAN6B;AAAA,MAMrBC,UANqB,GAMPH,UANO,CAMrBG,UANqB;AAQ9C,MAAMC,iBAAiB,GAAG,IAAIC,YAAJ,CAAiBN,OAAO,CAACO,MAAR,GAAiB,CAAlC,CAA1B;AACA,MAAMC,eAAe,GAAG,IAAIF,YAAJ,CAAiBN,OAAO,CAACO,MAAR,GAAiB,CAAlC,CAAxB;AACA,MAAME,iBAAiB,GAAG,IAAIH,YAAJ,CAAiBN,OAAO,CAACO,MAAR,GAAiB,CAAlC,CAA1B;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,OAAO,CAACO,MAA5B,EAAoC,EAAEG,CAAtC,EAAyC;AACvC,QAAMC,KAAK,GAAGX,OAAO,CAACU,CAAD,CAArB;AACAL,IAAAA,iBAAiB,CAACK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjB,GAA+BR,QAAQ,CAACS,KAAK,GAAG,CAAR,GAAY,CAAb,CAAvC;AACAN,IAAAA,iBAAiB,CAACK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjB,GAA+BR,QAAQ,CAACS,KAAK,GAAG,CAAR,GAAY,CAAb,CAAvC;AACAN,IAAAA,iBAAiB,CAACK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjB,GAA+BR,QAAQ,CAACS,KAAK,GAAG,CAAR,GAAY,CAAb,CAAvC;AACAH,IAAAA,eAAe,CAACE,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAf,GAA6BP,MAAM,CAACQ,KAAK,GAAG,CAAR,GAAY,CAAb,CAAnC;AACAH,IAAAA,eAAe,CAACE,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAf,GAA6BP,MAAM,CAACQ,KAAK,GAAG,CAAR,GAAY,CAAb,CAAnC;AACAH,IAAAA,eAAe,CAACE,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAf,GAA6BP,MAAM,CAACQ,KAAK,GAAG,CAAR,GAAY,CAAb,CAAnC;AACAF,IAAAA,iBAAiB,CAACC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjB,GAA+BN,UAAU,CAACO,KAAK,GAAG,CAAR,GAAY,CAAb,CAAzC;AACAF,IAAAA,iBAAiB,CAACC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjB,GAA+BN,UAAU,CAACO,KAAK,GAAG,CAAR,GAAY,CAAb,CAAzC;AACD;;AAED,SAAO;AACLV,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAEG,iBADA;AAEVF,MAAAA,MAAM,EAAEK,eAFE;AAGVJ,MAAAA,UAAU,EAAEK;AAHF;AADP,GAAP;AAOD","sourcesContent":["// TODO - generalize to arbitrary attributes\nexport function unpackIndexedGeometry(geometry) {\n  const {indices, attributes} = geometry;\n  if (!indices) {\n    return geometry;\n  }\n\n  const {POSITION, NORMAL, TEXCOORD_0} = attributes;\n\n  const unpackedPositions = new Float32Array(indices.length * 3);\n  const unpackedNormals = new Float32Array(indices.length * 3);\n  const unpackedTexCoords = new Float32Array(indices.length * 2);\n\n  for (let x = 0; x < indices.length; ++x) {\n    const index = indices[x];\n    unpackedPositions[x * 3 + 0] = POSITION[index * 3 + 0];\n    unpackedPositions[x * 3 + 1] = POSITION[index * 3 + 1];\n    unpackedPositions[x * 3 + 2] = POSITION[index * 3 + 2];\n    unpackedNormals[x * 3 + 0] = NORMAL[index * 3 + 0];\n    unpackedNormals[x * 3 + 1] = NORMAL[index * 3 + 1];\n    unpackedNormals[x * 3 + 2] = NORMAL[index * 3 + 2];\n    unpackedTexCoords[x * 2 + 0] = TEXCOORD_0[index * 2 + 0];\n    unpackedTexCoords[x * 2 + 1] = TEXCOORD_0[index * 2 + 1];\n  }\n\n  return {\n    attributes: {\n      POSITION: unpackedPositions,\n      NORMAL: unpackedNormals,\n      TEXCOORD_0: unpackedTexCoords\n    }\n  };\n}\n"],"file":"geometry-utils.js"}