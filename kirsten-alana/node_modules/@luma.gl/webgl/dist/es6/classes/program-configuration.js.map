{"version":3,"sources":["../../../src/classes/program-configuration.js"],"names":["Accessor","isWebGL2","decomposeCompositeGLType","ProgramConfiguration","constructor","program","id","attributeInfos","attributeInfosByName","attributeInfosByLocation","varyingInfos","varyingInfosByName","Object","seal","_readAttributesFromProgram","_readVaryingsFromProgram","getAttributeInfo","locationOrName","location","Number","isFinite","getAttributeLocation","attributeInfo","getAttributeAccessor","accessor","getVaryingInfo","getVaryingIndex","varying","getVaryingAccessor","gl","count","getProgramParameter","handle","index","getActiveAttrib","name","type","size","getAttribLocation","_addAttribute","sort","a","b","getTransformFeedbackVarying","_addVarying","compositeType","components","_inferProperties","push","test","divisor"],"mappings":"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","sourcesContent":["// Contains metadata describing attribute configurations for a program's shaders\n// Much of this is automatically extracted from shaders after program linking\nimport Accessor from './accessor';\nimport {isWebGL2} from '../webgl-utils';\nimport {decomposeCompositeGLType} from '../webgl-utils/attribute-utils';\n\nexport default class ProgramConfiguration {\n  constructor(program) {\n    this.id = program.id;\n    this.attributeInfos = [];\n    this.attributeInfosByName = {};\n\n    // Locations may not be contiguous the case of matrix attributes\n    // so keep a separate location->attribute map.\n    this.attributeInfosByLocation = [];\n    this.varyingInfos = [];\n    this.varyingInfosByName = {};\n    Object.seal(this);\n    this._readAttributesFromProgram(program);\n    this._readVaryingsFromProgram(program);\n  }\n\n  getAttributeInfo(locationOrName) {\n    const location = Number(locationOrName);\n    if (Number.isFinite(location)) {\n      return this.attributeInfosByLocation[location];\n    }\n    return this.attributeInfosByName[locationOrName] || null;\n  }\n\n  // Resolves an attribute name or index to an index\n  getAttributeLocation(locationOrName) {\n    const attributeInfo = this.getAttributeInfo(locationOrName);\n    return attributeInfo ? attributeInfo.location : -1;\n  }\n\n  getAttributeAccessor(locationOrName) {\n    const attributeInfo = this.getAttributeInfo(locationOrName);\n    return attributeInfo ? attributeInfo.accessor : null;\n  }\n\n  getVaryingInfo(locationOrName) {\n    const location = Number(locationOrName);\n    if (Number.isFinite(location)) {\n      return this.varyingInfos[location];\n    }\n    return this.varyingInfosByName[locationOrName] || null;\n  }\n\n  getVaryingIndex(locationOrName) {\n    const varying = this.getVaryingInfo();\n    return varying ? varying.location : -1;\n  }\n\n  getVaryingAccessor(locationOrName) {\n    const varying = this.getVaryingInfo();\n    return varying ? varying.accessor : null;\n  }\n\n  // PRIVATE METHODS\n\n  // linkProgram needs to have been called, although linking does not need to have been successful\n  _readAttributesFromProgram(program) {\n    const {gl} = program;\n    const count = gl.getProgramParameter(program.handle, gl.ACTIVE_ATTRIBUTES);\n\n    for (let index = 0; index < count; index++) {\n      const {name, type, size} = gl.getActiveAttrib(program.handle, index);\n      const location = gl.getAttribLocation(program.handle, name);\n      // Add only user provided attributes, for built-in attributes like\n      // `gl_InstanceID` locaiton will be < 0\n      if (location >= 0) {\n        this._addAttribute(location, name, type, size);\n      }\n    }\n\n    this.attributeInfos.sort((a, b) => a.location - b.location);\n  }\n\n  // linkProgram needs to have been called, although linking does not need to have been successful\n  _readVaryingsFromProgram(program) {\n    const {gl} = program;\n    if (!isWebGL2(gl)) {\n      return;\n    }\n\n    const count = gl.getProgramParameter(program.handle, gl.TRANSFORM_FEEDBACK_VARYINGS);\n    for (let location = 0; location < count; location++) {\n      const {name, type, size} = gl.getTransformFeedbackVarying(program.handle, location);\n      this._addVarying(location, name, type, size);\n    }\n\n    this.varyingInfos.sort((a, b) => a.location - b.location);\n  }\n\n  _addAttribute(location, name, compositeType, size) {\n    const {type, components} = decomposeCompositeGLType(compositeType);\n    const accessor = {type, size: size * components};\n    this._inferProperties(location, name, accessor);\n\n    const attributeInfo = {location, name, accessor: new Accessor(accessor)}; // Base values\n    this.attributeInfos.push(attributeInfo);\n    this.attributeInfosByLocation[location] = attributeInfo; // For quick location based lookup\n    this.attributeInfosByName[attributeInfo.name] = attributeInfo; // For quick name based lookup\n  }\n\n  // Extract additional attribute metadata from shader names (based on attribute naming conventions)\n  _inferProperties(location, name, accessor) {\n    if (/instance/i.test(name)) {\n      // Any attribute containing the word \"instance\" will be assumed to be instanced\n      accessor.divisor = 1;\n    }\n  }\n\n  _addVarying(location, name, compositeType, size) {\n    const {type, components} = decomposeCompositeGLType(compositeType);\n    const accessor = new Accessor({type, size: size * components});\n\n    const varying = {location, name, accessor}; // Base values\n    this.varyingInfos.push(varying);\n    this.varyingInfosByName[varying.name] = varying; // For quick name based lookup\n  }\n}\n"],"file":"program-configuration.js"}