{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.js"],"names":["Layer","fp64","ScenegraphNode","log","load","MATRIX_ATTRIBUTES","vs","fs","fp64LowPart","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","fetch","url","propName","layer","getLoadOptions","then","scenes","response","json","sizeScale","min","getPosition","x","position","getColor","getOrientation","getScale","getTranslation","getTransformMatrix","ScenegraphLayer","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","accessor","transition","instancePositions64xy","update","calculateInstancePositions64xyLow","instanceColors","defaultValue","instanceModelMatrix","attribute","isFP64","use64bitPositions","constant","Float32Array","props","data","i","point","updateState","params","oldProps","_deleteScenegraph","_applyAllAttributes","setState","warn","finalizeState","allAttributes","getAttributes","traverse","model","_setModelAttributes","state","delete","gl","context","waitForFullLoad","modelOptions","modules","isInstanced","updateAttributes","changedAttributes","getChangedAttributes","clearChangedFlags","draw","moduleParameters","parameters","numInstances","getNumInstances","setInstanceCount","updateModuleSettings","uniforms","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global fetch */\n\nimport {Layer} from '@deck.gl/core';\nimport {fp64, ScenegraphNode, log} from '@luma.gl/core';\nimport {load} from '@loaders.gl/core';\n\nimport {MATRIX_ATTRIBUTES} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nconst {fp64LowPart} = fp64;\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\n\nconst defaultProps = {\n  scenegraph: {type: 'object', value: null, async: true},\n\n  fetch: (url, {propName, layer}) => {\n    if (propName === 'scenegraph') {\n      return load(url, layer.getLoadOptions()).then(({scenes}) => scenes[0]);\n    }\n\n    return fetch(url).then(response => response.json());\n  },\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []}\n};\n\nexport default class ScenegraphLayer extends Layer {\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        accessor: 'getPosition',\n        transition: true\n      },\n      instancePositions64xy: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      if (props.scenegraph instanceof ScenegraphNode) {\n        this._deleteScenegraph();\n        this._applyAllAttributes(props.scenegraph);\n        this.setState({scenegraph: props.scenegraph});\n      } else if (props.scenegraph !== null) {\n        log.warn('bad scenegraph:', props.scenegraph)();\n      }\n    }\n  }\n\n  finalizeState() {\n    this._deleteScenegraph();\n  }\n\n  _applyAllAttributes(scenegraph) {\n    const allAttributes = this.getAttributeManager().getAttributes();\n    scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, allAttributes);\n    });\n  }\n\n  _deleteScenegraph() {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  getLoadOptions() {\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      modelOptions: {\n        vs,\n        fs,\n        modules: ['project32', 'picking'],\n        isInstanced: true\n      }\n    };\n  }\n\n  updateAttributes(props) {\n    super.updateAttributes(props);\n    if (!this.state.scenegraph) return;\n\n    const attributeManager = this.getAttributeManager();\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}}) {\n    if (!this.state.scenegraph) return;\n\n    const {sizeScale} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse(model => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale\n        }\n      });\n    });\n  }\n}\n\nScenegraphLayer.layerName = 'ScenegraphLayer';\nScenegraphLayer.defaultProps = defaultProps;\n"],"file":"scenegraph-layer.js"}