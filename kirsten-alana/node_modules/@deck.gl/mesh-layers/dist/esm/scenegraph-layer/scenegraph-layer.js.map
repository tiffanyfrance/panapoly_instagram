{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.js"],"names":["Layer","fp64","ScenegraphNode","log","load","MATRIX_ATTRIBUTES","vs","fs","fp64LowPart","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","fetch","url","propName","layer","getLoadOptions","then","scenes","response","json","sizeScale","min","getPosition","x","position","getColor","getOrientation","getScale","getTranslation","getTransformMatrix","ScenegraphLayer","attributeManager","getAttributeManager","addInstanced","instancePositions","size","accessor","transition","instancePositions64xy","update","calculateInstancePositions64xyLow","instanceColors","defaultValue","instanceModelMatrix","attribute","isFP64","use64bitPositions","constant","Float32Array","props","data","i","point","params","oldProps","_deleteScenegraph","_applyAllAttributes","setState","warn","allAttributes","getAttributes","traverse","model","_setModelAttributes","state","delete","gl","context","waitForFullLoad","modelOptions","modules","isInstanced","changedAttributes","getChangedAttributes","clearChangedFlags","moduleParameters","parameters","numInstances","getNumInstances","setInstanceCount","updateModuleSettings","draw","uniforms","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global fetch */\n\nimport {Layer} from '@deck.gl/core';\nimport {fp64, ScenegraphNode, log} from '@luma.gl/core';\nimport {load} from '@loaders.gl/core';\n\nimport {MATRIX_ATTRIBUTES} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nconst {fp64LowPart} = fp64;\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\n\nconst defaultProps = {\n  scenegraph: {type: 'object', value: null, async: true},\n\n  fetch: (url, {propName, layer}) => {\n    if (propName === 'scenegraph') {\n      return load(url, layer.getLoadOptions()).then(({scenes}) => scenes[0]);\n    }\n\n    return fetch(url).then(response => response.json());\n  },\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []}\n};\n\nexport default class ScenegraphLayer extends Layer {\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        accessor: 'getPosition',\n        transition: true\n      },\n      instancePositions64xy: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      if (props.scenegraph instanceof ScenegraphNode) {\n        this._deleteScenegraph();\n        this._applyAllAttributes(props.scenegraph);\n        this.setState({scenegraph: props.scenegraph});\n      } else if (props.scenegraph !== null) {\n        log.warn('bad scenegraph:', props.scenegraph)();\n      }\n    }\n  }\n\n  finalizeState() {\n    this._deleteScenegraph();\n  }\n\n  _applyAllAttributes(scenegraph) {\n    const allAttributes = this.getAttributeManager().getAttributes();\n    scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, allAttributes);\n    });\n  }\n\n  _deleteScenegraph() {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  getLoadOptions() {\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      modelOptions: {\n        vs,\n        fs,\n        modules: ['project32', 'picking'],\n        isInstanced: true\n      }\n    };\n  }\n\n  updateAttributes(props) {\n    super.updateAttributes(props);\n    if (!this.state.scenegraph) return;\n\n    const attributeManager = this.getAttributeManager();\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}}) {\n    if (!this.state.scenegraph) return;\n\n    const {sizeScale} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse(model => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale\n        }\n      });\n    });\n  }\n}\n\nScenegraphLayer.layerName = 'ScenegraphLayer';\nScenegraphLayer.defaultProps = defaultProps;\n"],"file":"scenegraph-layer.js"}