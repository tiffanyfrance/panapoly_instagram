import { PathLayer } from '@deck.gl/layers';
const defaultProps = {
  trailLength: {
    type: 'number',
    value: 120,
    min: 0
  },
  currentTime: {
    type: 'number',
    value: 0,
    min: 0
  }
};
export default class TripsLayer extends PathLayer {
  getShaders() {
    const shaders = super.getShaders();
    shaders.inject = {
      'vs:#decl': `\
uniform float trailLength;
varying float vTime;
`,
      'vec3 pos = lineJoin(prevPosition, currPosition, nextPosition);': 'pos.z = 0.0;',
      'vs:#main-end': `\
float shiftZ = mod(instanceEndPositions.z, trailLength) * 1e-4;
gl_Position.z += shiftZ;
vTime = instanceStartPositions.z + (instanceEndPositions.z - instanceStartPositions.z) * vPathPosition.y / vPathLength;
`,
      'fs:#decl': `\
uniform float trailLength;
uniform float currentTime;
varying float vTime;
`,
      'fs:#main-start': `\
if(vTime > currentTime || vTime < currentTime - trailLength) {
  discard;
}
`,
      'gl_FragColor = vColor;': 'gl_FragColor.a *= 1.0 - (currentTime - vTime) / trailLength;'
    };
    return shaders;
  }

  draw(params) {
    const _this$props = this.props,
          trailLength = _this$props.trailLength,
          currentTime = _this$props.currentTime;
    params.uniforms = Object.assign({}, params.uniforms, {
      trailLength,
      currentTime
    });
    super.draw(params);
  }

}
TripsLayer.layerName = 'TripsLayer';
TripsLayer.defaultProps = defaultProps;
//# sourceMappingURL=trips-layer.js.map