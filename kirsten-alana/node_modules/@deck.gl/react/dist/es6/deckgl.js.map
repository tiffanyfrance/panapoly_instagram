{"version":3,"sources":["../../src/deckgl.js"],"names":["React","createElement","PropTypes","Deck","experimental","memoize","extractJSXLayers","positionChildrenUnderViews","autobind","propTypes","getPropTypes","defaultProps","DeckGL","Component","constructor","props","viewports","children","_needsRedraw","_extractJSXLayers","_positionChildrenUnderViews","componentDidMount","DeckClass","deck","Object","assign","canvas","deckCanvas","_customRender","_updateFromProps","shouldComponentUpdate","nextProps","childrenChanged","_parseJSX","viewsChanged","viewManager","needsRedraw","componentDidUpdate","_redrawDeck","componentWillUnmount","finalize","pickObject","x","y","radius","layerIds","pickMultipleObjects","depth","pickObjects","width","height","_drawLayers","redrawReason","getViewports","forceUpdate","layers","views","deckProps","setProps","render","style","position","left","top","ref","c","key","id"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport {Deck, experimental} from '@deck.gl/core';\nconst {memoize} = experimental;\n\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport autobind from './utils/autobind';\n\nconst propTypes = Deck.getPropTypes(PropTypes);\n\nconst defaultProps = Deck.defaultProps;\n\nexport default class DeckGL extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.viewports = null;\n    this.children = null;\n\n    // The redraw flag of deck\n    this._needsRedraw = null;\n\n    autobind(this);\n\n    // Memoized functions\n    this._extractJSXLayers = memoize(extractJSXLayers);\n    this._positionChildrenUnderViews = memoize(positionChildrenUnderViews);\n  }\n\n  componentDidMount() {\n    // Allows a subclass of Deck to be used\n    // TODO - update propTypes / defaultProps?\n    const DeckClass = this.props.Deck || Deck;\n\n    // DEVTOOLS can cause this to be called twice\n    this.deck =\n      this.deck ||\n      new DeckClass(\n        Object.assign({}, this.props, {\n          canvas: this.deckCanvas,\n          // The Deck's animation loop is independent from React's render cycle, causing potential\n          // synchronization issues. We provide this custom render function to make sure that React\n          // and Deck update on the same schedule.\n          _customRender: this._customRender\n        })\n      );\n    this._updateFromProps(this.props);\n  }\n\n  // This method checks if React needs to call `render`.\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL context - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL context and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  shouldComponentUpdate(nextProps) {\n    // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n    // the next animation frame.\n    this._updateFromProps(nextProps);\n\n    // If the child components have changed, React needs to rerender (case 2 or 3)\n    const childrenChanged = this.children !== this._parseJSX(nextProps).children;\n    // If the views have changed, both React and WebGL context need update (case 3)\n    const viewsChanged = this.deck.viewManager && this.deck.viewManager.needsRedraw();\n\n    // Only call `render` right away in case 2\n    return childrenChanged && !viewsChanged;\n  }\n\n  componentDidUpdate() {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    this._redrawDeck();\n  }\n\n  componentWillUnmount() {\n    this.deck.finalize();\n  }\n\n  // Public API\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    return this.deck.pickObject({x, y, radius, layerIds});\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    return this.deck.pickMultipleObjects({x, y, radius, layerIds, depth});\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    return this.deck.pickObjects({x, y, width, height, layerIds});\n  }\n\n  // Callbacks\n  _redrawDeck() {\n    if (this._needsRedraw) {\n      // Only redraw it we have received a dirty flag\n      this.deck._drawLayers(this._needsRedraw);\n      this._needsRedraw = null;\n    }\n  }\n\n  _customRender(redrawReason) {\n    // Save the dirty flag for later\n    this._needsRedraw = redrawReason;\n\n    // Viewport/view state is passed to child components as props.\n    // If they have changed, we need to trigger a React rerender to update children props.\n    const viewports = this.deck.viewManager.getViewports();\n    if (viewports !== this.viewports) {\n      // Viewports have changed, update children props first.\n      // This will delay the Deck canvas redraw till after React update (in componentDidUpdate)\n      // so that the canvas does not get rendered before the child components update.\n      this.forceUpdate();\n    } else {\n      this._redrawDeck();\n    }\n  }\n\n  // Private Helpers\n\n  _parseJSX(props) {\n    return this._extractJSXLayers({\n      layers: props.layers,\n      views: props.views,\n      children: props.children\n    });\n  }\n\n  // 1. Extract any JSX layers from the react children\n  // 2. Handle any backwards compatiblity props for React layer\n  // Needs to be called both from initial mount, and when new props are received\n  _updateFromProps(props) {\n    // extract any deck.gl layers masquerading as react elements from props.children\n    const {layers, views} = this._parseJSX(props);\n    const deckProps = Object.assign({}, props, {\n      layers,\n      views\n    });\n\n    this.deck.setProps(deckProps);\n  }\n\n  render() {\n    // Save the viewports and children used for this render\n    const {viewManager} = this.deck || {};\n    this.viewports = viewManager && viewManager.getViewports();\n    this.children = this._parseJSX(this.props).children;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const children = this._positionChildrenUnderViews({\n      children: this.children,\n      viewports: this.viewports,\n      deck: this.deck\n    });\n\n    // TODO - this styling is enforced for correct positioning with children\n    // It can override the styling set by `Deck`, this should be consolidated.\n    // Note that width and height are handled by deck.gl\n    const style = Object.assign({}, {position: 'absolute', left: 0, top: 0}, this.props.style);\n\n    const canvas = createElement('canvas', {\n      ref: c => (this.deckCanvas = c),\n      key: 'deck-canvas',\n      id: this.props.id,\n      style\n    });\n\n    // Render deck.gl as the last child\n    return createElement('div', {id: 'deckgl-wrapper'}, [children, canvas]);\n  }\n}\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;\n"],"file":"deckgl.js"}