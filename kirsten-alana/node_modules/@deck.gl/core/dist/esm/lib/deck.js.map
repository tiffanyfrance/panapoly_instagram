{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","log","AnimationLoop","createGLContext","trackContextState","setParameters","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","setProps","start","stop","finalize","eventManager","destroy","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","getViewports","x","y","radius","layerIds","getLayers","activateViewport","selectedInfos","pickObject","viewports","mode","depth","result","length","infos","pickObjects","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","onCreateContext","onInitialize","onRender","Array","isArray","event","callback","immediate","type","pos","offsetCenter","emptyInfo","pickedInfo","find","info","index","cursor","animationProps","context","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","_updateCanvasSize","renderOptions","renderLayers","getViews","pass","getEffects","_setGLContext","tick","table","forEach","stat","name","time","count","average","getAverageTime","hz","getHz","reset","_updateCursor","updateLayers","_updateAnimationProps","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","_requestPick","leftButton","rightButton","onHover"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport log from '../utils/log';\n\nimport GL from '@luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.get('pickObject Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth: 1\n    }).result;\n    this.stats.get('pickObject Time').timeEnd();\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.get('pickMultipleObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth\n    }).result;\n    this.stats.get('pickMultipleObjects Time').timeEnd();\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.get('pickObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const infos = this.deckPicker.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      viewports: this.getViewports({x, y, width, height}),\n      activateViewport\n    });\n    this.stats.get('pickObjects Time').timeEnd();\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _requestPick({event, callback, mode, immediate}) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    _pickRequest.callback = callback;\n    _pickRequest.event = event;\n    _pickRequest.mode = mode;\n\n    if (immediate) {\n      this._pickAndCallback();\n    }\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this.deckPicker.pickObject(\n        Object.assign(\n          {\n            layers: this.layerManager.getLayers(),\n            viewports: this.getViewports(_pickRequest),\n            activateViewport: this.layerManager.activateViewport,\n            depth: 1\n          },\n          _pickRequest\n        )\n      );\n      if (_pickRequest.callback) {\n        const pickedInfo = result.find(info => info.index >= 0) || emptyInfo;\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(gl.canvas, {\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const layers = this.layerManager.getLayers();\n    const activateViewport = this.layerManager.activateViewport;\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          layers,\n          viewports: this.viewManager.getViewports(),\n          activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this.stats.get('frameRate').timeEnd();\n    this.stats.get('frameRate').timeStart();\n\n    // Log perf stats every second\n    if (animationProps.tick % 60 === 0) {\n      const table = {};\n      this.stats.forEach(stat => {\n        table[stat.name] = {\n          time: stat.time || 0,\n          count: stat.count || 0,\n          average: stat.getAverageTime() || 0,\n          hz: stat.getHz() || 0\n        };\n      });\n      this.stats.reset();\n      log.table(3, table)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(table);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers(animationProps);\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates(animationProps);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject({\n      x: pos.x,\n      y: pos.y,\n      layers,\n      viewports: this.getViewports(pos)\n    });\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    this._requestPick({\n      callback: null,\n      event,\n      mode: 'hover',\n      immediate: true\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}