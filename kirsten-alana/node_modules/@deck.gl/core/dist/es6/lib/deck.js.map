{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","log","AnimationLoop","createGLContext","trackContextState","setParameters","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","setProps","start","finalize","stop","eventManager","destroy","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","needsRedraw","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","getViews","getViewports","rect","pickObject","x","y","radius","layerIds","getLayers","activateViewport","selectedInfos","viewports","mode","depth","result","length","pickMultipleObjects","pickObjects","infos","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","onCreateContext","onInitialize","onRender","Array","isArray","_requestPick","event","callback","immediate","type","pos","offsetCenter","emptyInfo","pickedInfo","find","info","index","_updateCursor","cursor","_updateAnimationProps","animationProps","context","_setGLContext","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","renderOptions","renderLayers","pass","getEffects","tick","table","forEach","stat","name","time","count","average","getAverageTime","hz","getHz","reset","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","leftButton","rightButton","onHover"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport log from '../utils/log';\n\nimport GL from '@luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.get('pickObject Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth: 1\n    }).result;\n    this.stats.get('pickObject Time').timeEnd();\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.get('pickMultipleObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth\n    }).result;\n    this.stats.get('pickMultipleObjects Time').timeEnd();\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.get('pickObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const infos = this.deckPicker.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      viewports: this.getViewports({x, y, width, height}),\n      activateViewport\n    });\n    this.stats.get('pickObjects Time').timeEnd();\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _requestPick({event, callback, mode, immediate}) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    _pickRequest.callback = callback;\n    _pickRequest.event = event;\n    _pickRequest.mode = mode;\n\n    if (immediate) {\n      this._pickAndCallback();\n    }\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this.deckPicker.pickObject(\n        Object.assign(\n          {\n            layers: this.layerManager.getLayers(),\n            viewports: this.getViewports(_pickRequest),\n            activateViewport: this.layerManager.activateViewport,\n            depth: 1\n          },\n          _pickRequest\n        )\n      );\n      if (_pickRequest.callback) {\n        const pickedInfo = result.find(info => info.index >= 0) || emptyInfo;\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(gl.canvas, {\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const layers = this.layerManager.getLayers();\n    const activateViewport = this.layerManager.activateViewport;\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          layers,\n          viewports: this.viewManager.getViewports(),\n          activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this.stats.get('frameRate').timeEnd();\n    this.stats.get('frameRate').timeStart();\n\n    // Log perf stats every second\n    if (animationProps.tick % 60 === 0) {\n      const table = {};\n      this.stats.forEach(stat => {\n        table[stat.name] = {\n          time: stat.time || 0,\n          count: stat.count || 0,\n          average: stat.getAverageTime() || 0,\n          hz: stat.getHz() || 0\n        };\n      });\n      this.stats.reset();\n      log.table(3, table)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(table);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers(animationProps);\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates(animationProps);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject({\n      x: pos.x,\n      y: pos.y,\n      layers,\n      viewports: this.getViewports(pos)\n    });\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    this._requestPick({\n      callback: null,\n      event,\n      mode: 'hover',\n      immediate: true\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this._requestPick({\n      callback: this.props.onHover,\n      event,\n      mode: 'hover'\n    });\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}