{"version":3,"sources":["../../../src/column-layer/column-layer.js"],"names":["Layer","log","createIterable","Model","CylinderGeometry","fp64","PhongMaterial","fp64LowPart","defaultMaterial","vs","fs","DEFAULT_COLOR","defaultProps","diskResolution","type","min","value","vertices","radius","angle","offset","coverage","max","elevationScale","extruded","getPosition","x","position","getColor","getElevation","material","ColumnLayer","getShaders","projectModule","use64bitProjection","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","instanceElevations","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceColors","defaultValue","updateState","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","_updateVertices","getGeometry","topCap","bottomCap","height","verticalAxis","nradial","nvertical","Object","assign","id","geometry","isInstanced","shaderCache","assert","length","positions","attributes","POSITION","i","loopIndex","j","p","setProps","draw","uniforms","setUniforms","Math","PI","attribute","isFP64","use64bitPositions","constant","Float32Array","data","iterable","objectInfo","object","index","layerName"],"mappings":"AAoBA,SAAQA,KAAR,EAAeC,GAAf,EAAoBC,cAApB,QAAyC,eAAzC;AAEA,SAAQC,KAAR,EAAeC,gBAAf,EAAiCC,IAAjC,EAAuCC,aAAvC,QAA2D,eAA3D;MACOC,W,GAAeF,I,CAAfE,W;AACP,MAAMC,eAAe,GAAG,IAAIF,aAAJ,EAAxB;AAEA,OAAOG,EAAP,MAAe,4BAAf;AACA,OAAOC,EAAP,MAAe,8BAAf;AAEA,MAAMC,aAAa,GAAG,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,GAAd,CAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GADG;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnBC,EAAAA,MAAM,EAAE;AAACJ,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAHW;AAInBG,EAAAA,KAAK,EAAE;AAACL,IAAAA,IAAI,EAAE,QAAP;AAAiBE,IAAAA,KAAK,EAAE;AAAxB,GAJY;AAKnBI,EAAAA,MAAM,EAAE;AAACN,IAAAA,IAAI,EAAE,OAAP;AAAgBE,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAvB,GALW;AAMnBK,EAAAA,QAAQ,EAAE;AAACP,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBO,IAAAA,GAAG,EAAE,CAA9B;AAAiCN,IAAAA,KAAK,EAAE;AAAxC,GANS;AAOnBO,EAAAA,cAAc,EAAE;AAACT,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAtB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAPG;AAQnBQ,EAAAA,QAAQ,EAAE,IARS;AASnBnB,EAAAA,IAAI,EAAE,KATa;AAWnBoB,EAAAA,WAAW,EAAE;AAACX,IAAAA,IAAI,EAAE,UAAP;AAAmBE,IAAAA,KAAK,EAAEU,CAAC,IAAIA,CAAC,CAACC;AAAjC,GAXM;AAYnBC,EAAAA,QAAQ,EAAE;AAACd,IAAAA,IAAI,EAAE,UAAP;AAAmBE,IAAAA,KAAK,EAAEL;AAA1B,GAZS;AAanBkB,EAAAA,YAAY,EAAE;AAACf,IAAAA,IAAI,EAAE,UAAP;AAAmBE,IAAAA,KAAK,EAAE;AAA1B,GAbK;AAenBc,EAAAA,QAAQ,EAAEtB;AAfS,CAArB;AAkBA,eAAe,MAAMuB,WAAN,SAA0B/B,KAA1B,CAAgC;AAC7CgC,EAAAA,UAAU,GAAG;AACX,UAAMC,aAAa,GAAG,KAAKC,kBAAL,KAA4B,WAA5B,GAA0C,WAAhE;AACA,WAAO;AAACzB,MAAAA,EAAD;AAAKC,MAAAA,EAAL;AAASyB,MAAAA,OAAO,EAAE,CAACF,aAAD,EAAgB,kBAAhB,EAAoC,SAApC;AAAlB,KAAP;AACD;;AAMDG,EAAAA,eAAe,GAAG;AAChB,UAAMC,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AAEAD,IAAAA,gBAAgB,CAACE,YAAjB,CAA8B;AAC5BC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,IAAI,EAAE,CADW;AAEjBC,QAAAA,UAAU,EAAE,IAFK;AAGjBC,QAAAA,QAAQ,EAAE;AAHO,OADS;AAM5BC,MAAAA,kBAAkB,EAAE;AAClBH,QAAAA,IAAI,EAAE,CADY;AAElBC,QAAAA,UAAU,EAAE,IAFM;AAGlBC,QAAAA,QAAQ,EAAE;AAHQ,OANQ;AAW5BE,MAAAA,wBAAwB,EAAE;AACxBJ,QAAAA,IAAI,EAAE,CADkB;AAExBE,QAAAA,QAAQ,EAAE,aAFc;AAGxBG,QAAAA,MAAM,EAAE,KAAKC;AAHW,OAXE;AAgB5BC,MAAAA,cAAc,EAAE;AACdP,QAAAA,IAAI,EAAE,CADQ;AAEd3B,QAAAA,IAAI,MAFU;AAGd4B,QAAAA,UAAU,EAAE,IAHE;AAIdC,QAAAA,QAAQ,EAAE,UAJI;AAKdM,QAAAA,YAAY,EAAEtC;AALA;AAhBY,KAA9B;AAyBD;;AAEDuC,EAAAA,WAAW,OAAiC;AAAA,QAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAdC,WAAc,QAAdA,WAAc;AAC1C,UAAMH,WAAN,CAAkB;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAAlB;;AACA,QAAIF,KAAK,CAAC9C,IAAN,KAAe+C,QAAQ,CAAC/C,IAAxB,IAAgC8C,KAAK,CAACtC,cAAN,KAAyBuC,QAAQ,CAACvC,cAAtE,EAAsF;AAAA,YAC7EyC,EAD6E,GACvE,KAAKC,OADkE,CAC7ED,EAD6E;;AAEpF,UAAI,KAAKE,KAAL,CAAWC,KAAf,EAAsB;AACpB,aAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB;AACD;;AACD,WAAKC,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAE,KAAKG,SAAL,CAAeN,EAAf;AAAR,OAAd;AACA,WAAKhB,mBAAL,GAA2BuB,aAA3B;AACD;;AAED,QAAIV,KAAK,CAAClC,QAAN,KAAmBmC,QAAQ,CAACnC,QAAhC,EAA0C;AACxC,WAAK6C,eAAL,CAAqBX,KAAK,CAAClC,QAA3B;AACD;AACF;;AAED8C,EAAAA,WAAW,CAAClD,cAAD,EAAiB;AAC1B,WAAO,IAAIT,gBAAJ,CAAqB;AAC1Bc,MAAAA,MAAM,EAAE,CADkB;AAE1B8C,MAAAA,MAAM,EAAE,KAFkB;AAG1BC,MAAAA,SAAS,EAAE,IAHe;AAI1BC,MAAAA,MAAM,EAAE,CAJkB;AAK1BC,MAAAA,YAAY,EAAE,GALY;AAM1BC,MAAAA,OAAO,EAAEvD,cANiB;AAO1BwD,MAAAA,SAAS,EAAE;AAPe,KAArB,CAAP;AASD;;AAEDT,EAAAA,SAAS,CAACN,EAAD,EAAK;AACZ,WAAO,IAAInD,KAAJ,CACLmD,EADK,EAELgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKvC,UAAL,EAAlB,EAAqC;AACnCwC,MAAAA,EAAE,EAAE,KAAKrB,KAAL,CAAWqB,EADoB;AAEnCC,MAAAA,QAAQ,EAAE,KAAKV,WAAL,CAAiB,KAAKZ,KAAL,CAAWtC,cAA5B,CAFyB;AAGnC6D,MAAAA,WAAW,EAAE,IAHsB;AAInCC,MAAAA,WAAW,EAAE,KAAKpB,OAAL,CAAaoB;AAJS,KAArC,CAFK,CAAP;AASD;;AAEDb,EAAAA,eAAe,CAAC7C,QAAD,EAAW;AACxB,QAAI,CAACA,QAAL,EAAe;AACb;AACD;;AAHuB,UAKjBJ,cALiB,GAKC,KAAKsC,KALN,CAKjBtC,cALiB;AAMxBZ,IAAAA,GAAG,CAAC2E,MAAJ,CAAW3D,QAAQ,CAAC4D,MAAT,IAAmBhE,cAA9B;AANwB,UAQjB4C,KARiB,GAQR,KAAKD,KARG,CAQjBC,KARiB;AASxB,UAAMgB,QAAQ,GAAG,KAAKV,WAAL,CAAiB,KAAKZ,KAAL,CAAWtC,cAA5B,CAAjB;AACA,UAAMiE,SAAS,GAAGL,QAAQ,CAACM,UAAT,CAAoBC,QAAtC;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAG,CAApC,EAAuCA,SAAS,EAAhD,EAAoD;AAClD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAItE,cAArB,EAAqCsE,CAAC,EAAtC,EAA0C;AACxC,cAAMC,CAAC,GAAGnE,QAAQ,CAACkE,CAAD,CAAR,IAAelE,QAAQ,CAAC,CAAD,CAAjC;AAEA6D,QAAAA,SAAS,CAAC9D,KAAV,CAAgBiE,CAAC,EAAjB,IAAuBG,CAAC,CAAC,CAAD,CAAxB;AACAN,QAAAA,SAAS,CAAC9D,KAAV,CAAgBiE,CAAC,EAAjB,IAAuBG,CAAC,CAAC,CAAD,CAAxB;AACAH,QAAAA,CAAC;AACF;AACF;;AACDxB,IAAAA,KAAK,CAAC4B,QAAN,CAAe;AAACZ,MAAAA;AAAD,KAAf;AACD;;AAEDa,EAAAA,IAAI,QAAa;AAAA,QAAXC,QAAW,SAAXA,QAAW;AAAA,wBACqD,KAAKpC,KAD1D;AAAA,UACR5B,cADQ,eACRA,cADQ;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBJ,MADlB,eACkBA,MADlB;AAAA,UAC0BC,QAD1B,eAC0BA,QAD1B;AAAA,UACoCH,MADpC,eACoCA,MADpC;AAAA,UAC4CC,KAD5C,eAC4CA,KAD5C;AAGf,SAAKqC,KAAL,CAAWC,KAAX,CACG+B,WADH,CAEIlB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgB,QAAlB,EAA4B;AAC1BrE,MAAAA,MAD0B;AAE1BC,MAAAA,KAAK,EAAGA,KAAK,GAAG,GAAT,GAAgBsE,IAAI,CAACC,EAFF;AAG1BtE,MAAAA,MAH0B;AAI1BI,MAAAA,QAJ0B;AAK1BH,MAAAA,QAL0B;AAM1BE,MAAAA;AAN0B,KAA5B,CAFJ,EAWG+D,IAXH;AAYD;;AAEDvC,EAAAA,iCAAiC,CAAC4C,SAAD,EAAY;AAC3C,UAAMC,MAAM,GAAG,KAAKC,iBAAL,EAAf;AACAF,IAAAA,SAAS,CAACG,QAAV,GAAqB,CAACF,MAAtB;;AAEA,QAAI,CAACA,MAAL,EAAa;AACXD,MAAAA,SAAS,CAAC3E,KAAV,GAAkB,IAAI+E,YAAJ,CAAiB,CAAjB,CAAlB;AACA;AACD;;AAP0C,yBASf,KAAK5C,KATU;AAAA,UASpC6C,IAToC,gBASpCA,IAToC;AAAA,UAS9BvE,WAT8B,gBAS9BA,WAT8B;AAAA,UAUpCT,KAVoC,GAU3B2E,SAV2B,CAUpC3E,KAVoC;AAW3C,QAAIiE,CAAC,GAAG,CAAR;;AAX2C,4BAYZ/E,cAAc,CAAC8F,IAAD,CAZF;AAAA,UAYpCC,QAZoC,mBAYpCA,QAZoC;AAAA,UAY1BC,UAZ0B,mBAY1BA,UAZ0B;;AAa3C,SAAK,MAAMC,MAAX,IAAqBF,QAArB,EAA+B;AAC7BC,MAAAA,UAAU,CAACE,KAAX;AACA,YAAMzE,QAAQ,GAAGF,WAAW,CAAC0E,MAAD,EAASD,UAAT,CAA5B;AACAlF,MAAAA,KAAK,CAACiE,CAAC,EAAF,CAAL,GAAa1E,WAAW,CAACoB,QAAQ,CAAC,CAAD,CAAT,CAAxB;AACAX,MAAAA,KAAK,CAACiE,CAAC,EAAF,CAAL,GAAa1E,WAAW,CAACoB,QAAQ,CAAC,CAAD,CAAT,CAAxB;AACD;AACF;;AA5I4C;AA+I/CI,WAAW,CAACsE,SAAZ,GAAwB,aAAxB;AACAtE,WAAW,CAACnB,YAAZ,GAA2BA,YAA3B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, log, createIterable} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, CylinderGeometry, fp64, PhongMaterial} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\nconst defaultMaterial = new PhongMaterial();\n\nimport vs from './column-layer-vertex.glsl';\nimport fs from './column-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [255, 0, 255, 255];\n\nconst defaultProps = {\n  diskResolution: {type: 'number', min: 4, value: 20},\n  vertices: null,\n  radius: {type: 'number', min: 0, value: 1000},\n  angle: {type: 'number', value: 0},\n  offset: {type: 'array', value: [0, 0]},\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  elevationScale: {type: 'number', min: 0, value: 1},\n  extruded: true,\n  fp64: false,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getElevation: {type: 'accessor', value: 1000},\n\n  material: defaultMaterial\n};\n\nexport default class ColumnLayer extends Layer {\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'gouraud-lighting', 'picking']};\n  }\n\n  /**\n   * DeckGL calls initializeState when GL context is available\n   * Essentially a deferred constructor\n   */\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceElevations: {\n        size: 1,\n        transition: true,\n        accessor: 'getElevation'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64 || props.diskResolution !== oldProps.diskResolution) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n\n    if (props.vertices !== oldProps.vertices) {\n      this._updateVertices(props.vertices);\n    }\n  }\n\n  getGeometry(diskResolution) {\n    return new CylinderGeometry({\n      radius: 1,\n      topCap: false,\n      bottomCap: true,\n      height: 2,\n      verticalAxis: 'z',\n      nradial: diskResolution,\n      nvertical: 1\n    });\n  }\n\n  _getModel(gl) {\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: this.getGeometry(this.props.diskResolution),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  _updateVertices(vertices) {\n    if (!vertices) {\n      return;\n    }\n\n    const {diskResolution} = this.props;\n    log.assert(vertices.length >= diskResolution);\n\n    const {model} = this.state;\n    const geometry = this.getGeometry(this.props.diskResolution);\n    const positions = geometry.attributes.POSITION;\n    let i = 0;\n    for (let loopIndex = 0; loopIndex < 3; loopIndex++) {\n      for (let j = 0; j <= diskResolution; j++) {\n        const p = vertices[j] || vertices[0]; // auto close loop\n        // replace x and y in geometry\n        positions.value[i++] = p[0];\n        positions.value[i++] = p[1];\n        i++;\n      }\n    }\n    model.setProps({geometry});\n  }\n\n  draw({uniforms}) {\n    const {elevationScale, extruded, offset, coverage, radius, angle} = this.props;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          radius,\n          angle: (angle / 180) * Math.PI,\n          offset,\n          extruded,\n          coverage,\n          elevationScale\n        })\n      )\n      .draw();\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    const {iterable, objectInfo} = createIterable(data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const position = getPosition(object, objectInfo);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nColumnLayer.layerName = 'ColumnLayer';\nColumnLayer.defaultProps = defaultProps;\n"],"file":"column-layer.js"}