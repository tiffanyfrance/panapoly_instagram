{"version":3,"sources":["../../../src/path-layer/path-tesselator.js"],"names":["experimental","Tesselator","fp64","fp64Module","fp64LowPart","PathTesselator","constructor","data","getGeometry","positionFormat","attributes","startPositions","size","endPositions","leftDeltas","rightDeltas","startEndPositions64XyLow","fp64Only","get","attributeName","target","accessor","_updateAttribute","getValue","object","objectInfo","color","length","value","index","getGeometrySize","path","Math","max","getPathLength","updateGeometryAttributes","context","numPoints","geometrySize","isPathClosed","isClosed","startPoint","getPointOnPath","endPoint","prevPoint","nextPoint","i","vertexStart","ptIndex","Number","isFinite","positionSize","firstPoint","lastPoint"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {experimental} from '@deck.gl/core';\nconst {Tesselator} = experimental;\nimport {fp64 as fp64Module} from '@luma.gl/core';\nconst {fp64LowPart} = fp64Module;\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PathTesselator extends Tesselator {\n  constructor({data, getGeometry, positionFormat, fp64}) {\n    super({\n      data,\n      getGeometry,\n      fp64,\n      positionFormat,\n      attributes: {\n        startPositions: {size: 3},\n        endPositions: {size: 3},\n        leftDeltas: {size: 3},\n        rightDeltas: {size: 3},\n        startEndPositions64XyLow: {size: 4, fp64Only: true}\n      }\n    });\n  }\n\n  /* Getters */\n  get(attributeName, target, accessor) {\n    if (this.attributes[attributeName]) {\n      return this.attributes[attributeName];\n    }\n\n    switch (attributeName) {\n      case 'strokeWidths':\n        return this._updateAttribute({\n          target,\n          size: 1,\n          getValue: (object, objectInfo) => {\n            objectInfo.target[0] = accessor(object, objectInfo);\n            return objectInfo.target;\n          }\n        });\n\n      case 'dashArrays':\n        return this._updateAttribute({target, size: 2, getValue: accessor});\n\n      case 'colors':\n        return this._updateAttribute({\n          target,\n          size: 4,\n          getValue: (object, objectInfo) => {\n            const color = accessor(object, objectInfo);\n            if (color.length === 4) {\n              return color;\n            }\n            const value = objectInfo.target;\n            value[0] = color[0];\n            value[1] = color[1];\n            value[2] = color[2];\n            value[3] = 255;\n            return value;\n          }\n        });\n\n      case 'pickingColors':\n        return this._updateAttribute({\n          target,\n          size: 3,\n          getValue: (object, {index, target: value}) => accessor(index, value)\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  /* Implement base Tesselator interface */\n  getGeometrySize(path) {\n    return Math.max(0, this.getPathLength(path) - 1);\n  }\n\n  /* eslint-disable max-statements, complexity */\n  updateGeometryAttributes(path, context) {\n    const {\n      attributes: {startPositions, endPositions, leftDeltas, rightDeltas, startEndPositions64XyLow},\n      fp64\n    } = this;\n\n    const numPoints = context.geometrySize + 1;\n    if (numPoints < 2) {\n      // ignore invalid path\n      return;\n    }\n    const isPathClosed = this.isClosed(path);\n\n    let startPoint = this.getPointOnPath(path, 0);\n    let endPoint = this.getPointOnPath(path, 1);\n    let prevPoint = isPathClosed ? this.getPointOnPath(path, numPoints - 2) : startPoint;\n    let nextPoint;\n\n    for (let i = context.vertexStart, ptIndex = 1; ptIndex < numPoints; i++, ptIndex++) {\n      if (ptIndex + 1 < numPoints) {\n        nextPoint = this.getPointOnPath(path, ptIndex + 1);\n      } else {\n        nextPoint = isPathClosed ? this.getPointOnPath(path, 1) : endPoint;\n      }\n\n      startPositions[i * 3] = startPoint[0];\n      startPositions[i * 3 + 1] = startPoint[1];\n      startPositions[i * 3 + 2] = startPoint[2] || 0;\n\n      endPositions[i * 3] = endPoint[0];\n      endPositions[i * 3 + 1] = endPoint[1];\n      endPositions[i * 3 + 2] = endPoint[2] || 0;\n\n      leftDeltas[i * 3] = startPoint[0] - prevPoint[0];\n      leftDeltas[i * 3 + 1] = startPoint[1] - prevPoint[1];\n      leftDeltas[i * 3 + 2] = startPoint[2] - prevPoint[2] || 0;\n\n      rightDeltas[i * 3] = nextPoint[0] - endPoint[0];\n      rightDeltas[i * 3 + 1] = nextPoint[1] - endPoint[1];\n      rightDeltas[i * 3 + 2] = nextPoint[2] - endPoint[2] || 0;\n\n      if (fp64) {\n        startEndPositions64XyLow[i * 4] = fp64LowPart(startPoint[0]);\n        startEndPositions64XyLow[i * 4 + 1] = fp64LowPart(startPoint[1]);\n        startEndPositions64XyLow[i * 4 + 2] = fp64LowPart(endPoint[0]);\n        startEndPositions64XyLow[i * 4 + 3] = fp64LowPart(endPoint[1]);\n      }\n\n      prevPoint = startPoint;\n      startPoint = endPoint;\n      endPoint = nextPoint;\n    }\n  }\n  /* eslint-enable max-statements, complexity */\n\n  /* Utilities */\n  getPathLength(path) {\n    if (Number.isFinite(path[0])) {\n      // flat format\n      return path.length / this.positionSize;\n    }\n    return path.length;\n  }\n\n  getPointOnPath(path, index) {\n    if (Number.isFinite(path[0])) {\n      // flat format\n      const {positionSize} = this;\n      // TODO - avoid creating new arrays when using binary\n      return [\n        path[index * positionSize],\n        path[index * positionSize + 1],\n        positionSize === 3 ? path[index * positionSize + 2] : 0\n      ];\n    }\n    return path[index];\n  }\n\n  isClosed(path) {\n    const numPoints = this.getPathLength(path);\n    const firstPoint = this.getPointOnPath(path, 0);\n    const lastPoint = this.getPointOnPath(path, numPoints - 1);\n    return (\n      firstPoint[0] === lastPoint[0] &&\n      firstPoint[1] === lastPoint[1] &&\n      firstPoint[2] === lastPoint[2]\n    );\n  }\n}\n"],"file":"path-tesselator.js"}