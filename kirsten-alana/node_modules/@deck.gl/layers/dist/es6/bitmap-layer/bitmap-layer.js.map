{"version":3,"sources":["../../../src/bitmap-layer/bitmap-layer.js"],"names":["Layer","Model","Geometry","Texture2D","fp64","loadImage","fp64LowPart","vs","fs","DEFAULT_TEXTURE_PARAMETERS","defaultProps","image","bounds","type","value","compare","desaturate","min","max","transparentColor","tintColor","BitmapLayer","getShaders","projectModule","use64bitProjection","modules","initializeState","attributeManager","getAttributeManager","positions","add","size","update","calculatePositions","Float32Array","positions64xyLow","calculatePositions64xyLow","setState","numInstances","updateState","props","oldProps","changeFlags","gl","context","state","model","delete","_getModel","invalidateAll","loadTexture","_getPositionsFromBounds","invalidate","Array","Number","isFinite","i","length","Object","assign","id","shaderCache","geometry","drawMode","vertexCount","attributes","texCoords","isInstanced","draw","uniforms","bitmapTexture","setUniforms","then","data","parameters","Image","HTMLCanvasElement","set","attribute","isFP64","use64bitPositions","constant","map","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global Image, HTMLCanvasElement */\nimport GL from '@luma.gl/constants';\nimport {Layer} from '@deck.gl/core';\nimport {Model, Geometry, Texture2D, fp64} from '@luma.gl/core';\nimport {loadImage} from '@loaders.gl/images';\n\nconst {fp64LowPart} = fp64;\n\nimport vs from './bitmap-layer-vertex';\nimport fs from './bitmap-layer-fragment';\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  // GL.LINEAR is the default value but explicitly set it here\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\nconst defaultProps = {\n  image: null,\n  bounds: {type: 'array', value: [1, 0, 0, 1], compare: true},\n  fp64: false,\n\n  desaturate: {type: 'number', min: 0, max: 1, value: 0},\n  // More context: because of the blending mode we're using for ground imagery,\n  // alpha is not effective when blending the bitmap layers with the base map.\n  // Instead we need to manually dim/blend rgb values with a background color.\n  transparentColor: {type: 'color', value: [0, 0, 0, 0]},\n  tintColor: {type: 'color', value: [255, 255, 255]}\n};\n\n/*\n * @class\n * @param {object} props\n * @param {number} props.transparentColor - color to interpret transparency to\n * @param {number} props.tintColor - color bias\n */\nexport default class BitmapLayer extends Layer {\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /*\n      -1,1  ---  1,1\n        |         |\n      -1,-1 --- 1,-1\n     */\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    attributeManager.add({\n      positions: {\n        size: 3,\n        update: this.calculatePositions,\n        value: new Float32Array(positions)\n      },\n      positions64xyLow: {\n        size: 3,\n        update: this.calculatePositions64xyLow,\n        value: new Float32Array(positions)\n      }\n    });\n\n    this.setState({numInstances: 1});\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    // setup model first\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n\n    if (props.image !== oldProps.image) {\n      this.loadTexture();\n    }\n\n    const attributeManager = this.getAttributeManager();\n\n    if (props.bounds !== oldProps.bounds) {\n      this.setState({\n        positions: this._getPositionsFromBounds(props.bounds)\n      });\n      attributeManager.invalidate('positions');\n      attributeManager.invalidate('positions64xyLow');\n    }\n  }\n\n  _getPositionsFromBounds(bounds) {\n    const positions = new Array(12);\n    // bounds as [minX, minY, maxX, maxY]\n    if (Number.isFinite(bounds[0])) {\n      /*\n        (minX0, maxY3) ---- (maxX2, maxY3)\n               |                  |\n               |                  |\n               |                  |\n        (minX0, minY1) ---- (maxX2, minY1)\n     */\n      positions[0] = bounds[0];\n      positions[1] = bounds[1];\n      positions[2] = 0;\n\n      positions[3] = bounds[0];\n      positions[4] = bounds[3];\n      positions[5] = 0;\n\n      positions[6] = bounds[2];\n      positions[7] = bounds[3];\n      positions[8] = 0;\n\n      positions[9] = bounds[2];\n      positions[10] = bounds[1];\n      positions[11] = 0;\n    } else {\n      // [[minX, minY], [minX, maxY], [maxX, maxY], [maxX, minY]]\n      for (let i = 0; i < bounds.length; i++) {\n        positions[i * 3 + 0] = bounds[i][0];\n        positions[i * 3 + 1] = bounds[i][1];\n        positions[i * 3 + 2] = bounds[i][2] || 0;\n      }\n    }\n\n    return positions;\n  }\n\n  _getModel(gl) {\n    if (!gl) {\n      return null;\n    }\n\n    /*\n      0,1 --- 1,1\n       |       |\n      0,0 --- 1,0\n    */\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        shaderCache: this.context.shaderCache,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          vertexCount: 4,\n          attributes: {\n            texCoords: new Float32Array([0, 0, 0, 1, 1, 1, 1, 0])\n          }\n        }),\n        isInstanced: false\n      })\n    );\n  }\n\n  draw({uniforms}) {\n    const {bitmapTexture, model} = this.state;\n    const {desaturate, transparentColor, tintColor} = this.props;\n\n    // // TODO fix zFighting\n    // Render the image\n    if (bitmapTexture && model) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            bitmapTexture,\n            desaturate,\n            transparentColor,\n            tintColor\n          })\n        )\n        .draw();\n    }\n  }\n\n  loadTexture() {\n    const {gl} = this.context;\n    const {image} = this.props;\n\n    if (typeof image === 'string') {\n      loadImage(image).then(data => {\n        this.setState({\n          bitmapTexture: new Texture2D(gl, {\n            data,\n            parameters: DEFAULT_TEXTURE_PARAMETERS\n          })\n        });\n      });\n    } else if (image instanceof Texture2D) {\n      this.setState({bitmapTexture: image});\n    } else if (\n      // browser object\n      image instanceof Image ||\n      image instanceof HTMLCanvasElement\n    ) {\n      this.setState({\n        bitmapTexture: new Texture2D(gl, {\n          data: image,\n          parameters: DEFAULT_TEXTURE_PARAMETERS\n        })\n      });\n    }\n  }\n\n  calculatePositions({value}) {\n    const {positions} = this.state;\n    value.set(positions);\n  }\n\n  calculatePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {value} = attribute;\n    value.set(this.state.positions.map(fp64LowPart));\n  }\n}\n\nBitmapLayer.layerName = 'BitmapLayer';\nBitmapLayer.defaultProps = defaultProps;\n"],"file":"bitmap-layer.js"}