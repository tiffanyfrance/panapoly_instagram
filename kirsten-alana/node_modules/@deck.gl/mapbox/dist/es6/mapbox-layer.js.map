{"version":3,"sources":["../../src/mapbox-layer.js"],"names":["getDeckInstance","addLayer","removeLayer","updateLayer","drawLayer","getViewState","MapboxLayer","constructor","props","id","Error","type","renderingMode","map","deck","onAdd","gl","onRemove","setProps","Object","assign","render","matrix","viewState","_getViewState","nearZMultiplier","height","farZMultiplier"],"mappings":"AAAA,SACEA,eADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,YANF,QAOO,cAPP;AASA,eAAe,MAAMC,WAAN,CAAkB;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAI,CAACA,KAAK,CAACC,EAAX,EAAe;AACb,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,SAAKD,EAAL,GAAUD,KAAK,CAACC,EAAhB;AACA,SAAKE,IAAL,GAAY,QAAZ;AACA,SAAKC,aAAL,GAAqBJ,KAAK,CAACI,aAAN,IAAuB,IAA5C;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKN,KAAL,GAAaA,KAAb;AACD;;AAIDO,EAAAA,KAAK,CAACF,GAAD,EAAMG,EAAN,EAAU;AACb,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYd,eAAe,CAAC;AAACa,MAAAA,GAAD;AAAMG,MAAAA,EAAN;AAAUF,MAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM;AAA3B,KAAD,CAA3B;AACAb,IAAAA,QAAQ,CAAC,KAAKa,IAAN,EAAY,IAAZ,CAAR;AACD;;AAEDG,EAAAA,QAAQ,GAAG;AACTf,IAAAA,WAAW,CAAC,KAAKY,IAAN,EAAY,IAAZ,CAAX;AACD;;AAEDI,EAAAA,QAAQ,CAACV,KAAD,EAAQ;AAEdW,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKZ,KAAnB,EAA0BA,KAA1B,EAAiC;AAACC,MAAAA,EAAE,EAAE,KAAKA;AAAV,KAAjC;;AAEA,QAAI,KAAKK,IAAT,EAAe;AACbX,MAAAA,WAAW,CAAC,KAAKW,IAAN,EAAY,IAAZ,CAAX;AACD;AACF;;AAEDO,EAAAA,MAAM,CAACL,EAAD,EAAKM,MAAL,EAAa;AACjB,SAAKR,IAAL,CAAUI,QAAV,CAAmB;AACjBK,MAAAA,SAAS,EAAE,KAAKC,aAAL;AADM,KAAnB;AAGApB,IAAAA,SAAS,CAAC,KAAKU,IAAN,EAAY,IAAZ,CAAT;AACD;;AAIDU,EAAAA,aAAa,GAAG;AAAA,UACPX,GADO,GACM,IADN,CACPA,GADO;AAAA,UACFC,IADE,GACM,IADN,CACFA,IADE;AAEd,WAAOT,YAAY,CAACQ,GAAD,EAAM;AACvBY,MAAAA,eAAe,EAAEX,IAAI,CAACY,MAAL,GAAc,IAAIZ,IAAI,CAACY,MAAvB,GAAgC,CAD1B;AAEvBC,MAAAA,cAAc,EAAE;AAFO,KAAN,CAAnB;AAID;;AAnD8B","sourcesContent":["import {\n  getDeckInstance,\n  addLayer,\n  removeLayer,\n  updateLayer,\n  drawLayer,\n  getViewState\n} from './deck-utils';\n\nexport default class MapboxLayer {\n  /* eslint-disable no-this-before-super */\n  constructor(props) {\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  /* Mapbox custom layer methods */\n\n  onAdd(map, gl) {\n    this.map = map;\n    this.deck = getDeckInstance({map, gl, deck: this.props.deck});\n    addLayer(this.deck, this);\n  }\n\n  onRemove() {\n    removeLayer(this.deck, this);\n  }\n\n  setProps(props) {\n    // id cannot be changed\n    Object.assign(this.props, props, {id: this.id});\n    // safe guard in case setProps is called before onAdd\n    if (this.deck) {\n      updateLayer(this.deck, this);\n    }\n  }\n\n  render(gl, matrix) {\n    this.deck.setProps({\n      viewState: this._getViewState()\n    });\n    drawLayer(this.deck, this);\n  }\n\n  /* Private API */\n\n  _getViewState() {\n    const {map, deck} = this;\n    return getViewState(map, {\n      nearZMultiplier: deck.height ? 1 / deck.height : 1,\n      farZMultiplier: 1\n    });\n  }\n}\n"],"file":"mapbox-layer.js"}