import savePixels from 'save-pixels';
import ndarray from 'ndarray';
import { bufferToArrayBuffer } from './buffer-to-array-buffer';
export function encodeImageToStreamNode(image, options) {
  var type = options.type ? options.type.replace('image/', '') : 'jpeg';
  var pixels = ndarray(image.data, [image.width, image.height, 4], [4, image.width * 4, 1], 0);
  return savePixels(pixels, type, options);
}
export function encodeImageNode(image, options) {
  var imageStream = encodeImageToStreamNode(image, options);
  return new Promise(function (resolve) {
    var buffers = [];
    imageStream.on('data', function (buffer) {
      return buffers.push(buffer);
    });
    imageStream.on('end', function () {
      var buffer = Buffer.concat(buffers);
      resolve(bufferToArrayBuffer(buffer));
    });
  });
}
//# sourceMappingURL=encode-image-node.js.map