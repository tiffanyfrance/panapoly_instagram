{"version":3,"sources":["../../src/image-loader.js"],"names":["canParseImage","parseImage","loadImage","parseToImageBitmap","loadToHTMLImage","name","extension","parse","loadAndParse","ImageBitmapLoader","HTMLImageLoader"],"mappings":"AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,kBAJF,EAKEC,eALF,QAMO,mBANP;AASA,eAAe;AACbC,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,SAAS,EAAE,EAFE;AAGbC,EAAAA,KAAK,EAAEP,aAAa,IAAIC,UAHX;AAIbO,EAAAA,YAAY,EAAE,CAACR,aAAD,IAAkBE;AAJnB,CAAf;AAUA,OAAO,MAAMO,iBAAiB,GAAG;AAC/BF,EAAAA,KAAK,EAAEJ;AADwB,CAA1B;AAKP,OAAO,MAAMO,eAAe,GAAG;AAC7BF,EAAAA,YAAY,EAAEJ;AADe,CAAxB","sourcesContent":["import {\n  canParseImage,\n  parseImage,\n  loadImage,\n  parseToImageBitmap,\n  loadToHTMLImage\n} from './lib/parse-image';\n\n// Loads a platform-specific image type that can be used as input data to WebGL textures\nexport default {\n  name: 'Images',\n  extension: [],\n  parse: canParseImage && parseImage,\n  loadAndParse: !canParseImage && loadImage\n};\n\n// EXPERIMENTAL\n\n// Specifically loads an ImageBitmap (works on newer browsers, on both main and worker threads)\nexport const ImageBitmapLoader = {\n  parse: parseToImageBitmap\n};\n\n// Specifically loads an HTMLImage (works on all browsers' main thread but not on worker threads)\nexport const HTMLImageLoader = {\n  loadAndParse: loadToHTMLImage\n};\n"],"file":"image-loader.js"}