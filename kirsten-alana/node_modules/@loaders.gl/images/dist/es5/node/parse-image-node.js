"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseImageNode = parseImageNode;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _getPixels = _interopRequireDefault(require("get-pixels"));

var _util = _interopRequireDefault(require("util"));

var _getImageMetadata2 = require("../lib/get-image-metadata");

function parseImageNode(_x, _x2) {
  return _parseImageNode.apply(this, arguments);
}

function _parseImageNode() {
  _parseImageNode = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(arrayBuffer, options) {
    var getPixelsAsync, _getImageMetadata, mimeType, buffer, ndarray;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            getPixelsAsync = _util["default"].promisify(_getPixels["default"]);
            _getImageMetadata = (0, _getImageMetadata2.getImageMetadata)(arrayBuffer), mimeType = _getImageMetadata.mimeType;
            buffer = arrayBuffer instanceof Buffer ? arrayBuffer : Buffer.from(arrayBuffer);
            _context.next = 5;
            return getPixelsAsync(buffer, mimeType);

          case 5:
            ndarray = _context.sent;
            return _context.abrupt("return", {
              width: ndarray.shape[0],
              height: ndarray.shape[1],
              data: ndarray.data
            });

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _parseImageNode.apply(this, arguments);
}
//# sourceMappingURL=parse-image-node.js.map