{"version":3,"sources":["../../src/image-loader.js"],"names":["name","extension","parse","canParseImage","parseImage","loadAndParse","loadImage","ImageBitmapLoader","parseToImageBitmap","HTMLImageLoader","loadToHTMLImage"],"mappings":";;;;;;;AAAA;;eASe;AACbA,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,SAAS,EAAE,EAFE;AAGbC,EAAAA,KAAK,EAAEC,6BAAiBC,sBAHX;AAIbC,EAAAA,YAAY,EAAE,CAACF,yBAAD,IAAkBG;AAJnB,C;;AAUR,IAAMC,iBAAiB,GAAG;AAC/BL,EAAAA,KAAK,EAAEM;AADwB,CAA1B;;AAKA,IAAMC,eAAe,GAAG;AAC7BJ,EAAAA,YAAY,EAAEK;AADe,CAAxB","sourcesContent":["import {\n  canParseImage,\n  parseImage,\n  loadImage,\n  parseToImageBitmap,\n  loadToHTMLImage\n} from './lib/parse-image';\n\n// Loads a platform-specific image type that can be used as input data to WebGL textures\nexport default {\n  name: 'Images',\n  extension: [],\n  parse: canParseImage && parseImage,\n  loadAndParse: !canParseImage && loadImage\n};\n\n// EXPERIMENTAL\n\n// Specifically loads an ImageBitmap (works on newer browsers, on both main and worker threads)\nexport const ImageBitmapLoader = {\n  parse: parseToImageBitmap\n};\n\n// Specifically loads an HTMLImage (works on all browsers' main thread but not on worker threads)\nexport const HTMLImageLoader = {\n  loadAndParse: loadToHTMLImage\n};\n"],"file":"image-loader.js"}