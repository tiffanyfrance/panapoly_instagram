{"version":3,"sources":["../../../src/gltf/gltf-loader.js"],"names":["parseGLTF","arrayBuffer","options","GLTFParser","parse","parseGLTFSync","parseSync","name","extension","text","binary"],"mappings":";;;;;;;;;;;AAEA;;AAEO,SAASA,SAAT,CAAmBC,WAAnB,EAA8C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACnD,SAAO,IAAIC,sBAAJ,GAAiBC,KAAjB,CAAuBH,WAAvB,EAAoCC,OAApC,CAAP;AACD;;AAEM,SAASG,aAAT,CAAuBJ,WAAvB,EAAkD;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACvD,SAAO,IAAIC,sBAAJ,GAAiBG,SAAjB,CAA2BL,WAA3B,EAAwCC,OAAxC,CAAP;AACD;;eAEc;AACbK,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,KAAT,CAFE;AAGbC,EAAAA,IAAI,EAAE,IAHO;AAIbC,EAAAA,MAAM,EAAE,IAJK;AAKbN,EAAAA,KAAK,EAAEJ,SALM;AAMbM,EAAAA,SAAS,EAAED;AANE,C","sourcesContent":["// Binary container format for glTF\n\nimport GLTFParser from './gltf-parser';\n\nexport function parseGLTF(arrayBuffer, options = {}) {\n  return new GLTFParser().parse(arrayBuffer, options);\n}\n\nexport function parseGLTFSync(arrayBuffer, options = {}) {\n  return new GLTFParser().parseSync(arrayBuffer, options);\n}\n\nexport default {\n  name: 'glTF',\n  extension: ['gltf', 'glb'],\n  text: true,\n  binary: true,\n  parse: parseGLTF,\n  parseSync: parseGLTFSync // Less features\n};\n"],"file":"gltf-loader.js"}