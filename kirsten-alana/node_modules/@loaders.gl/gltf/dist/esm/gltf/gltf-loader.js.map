{"version":3,"sources":["../../../src/gltf/gltf-loader.js"],"names":["GLTFParser","parseGLTF","arrayBuffer","options","parse","parseGLTFSync","parseSync","name","extension","text","binary"],"mappings":"AAEA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,OAAO,SAASC,SAAT,CAAmBC,WAAnB,EAA8C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACnD,SAAO,IAAIH,UAAJ,GAAiBI,KAAjB,CAAuBF,WAAvB,EAAoCC,OAApC,CAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBH,WAAvB,EAAkD;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACvD,SAAO,IAAIH,UAAJ,GAAiBM,SAAjB,CAA2BJ,WAA3B,EAAwCC,OAAxC,CAAP;AACD;AAED,eAAe;AACbI,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,KAAT,CAFE;AAGbC,EAAAA,IAAI,EAAE,IAHO;AAIbC,EAAAA,MAAM,EAAE,IAJK;AAKbN,EAAAA,KAAK,EAAEH,SALM;AAMbK,EAAAA,SAAS,EAAED;AANE,CAAf","sourcesContent":["// Binary container format for glTF\n\nimport GLTFParser from './gltf-parser';\n\nexport function parseGLTF(arrayBuffer, options = {}) {\n  return new GLTFParser().parse(arrayBuffer, options);\n}\n\nexport function parseGLTFSync(arrayBuffer, options = {}) {\n  return new GLTFParser().parseSync(arrayBuffer, options);\n}\n\nexport default {\n  name: 'glTF',\n  extension: ['gltf', 'glb'],\n  text: true,\n  binary: true,\n  parse: parseGLTF,\n  parseSync: parseGLTFSync // Less features\n};\n"],"file":"gltf-loader.js"}