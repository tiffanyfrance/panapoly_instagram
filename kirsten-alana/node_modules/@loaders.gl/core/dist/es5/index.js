"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseFile = parseFile;
exports.parseFileSync = parseFileSync;
exports.loadFile = loadFile;
Object.defineProperty(exports, "setPathPrefix", {
  enumerable: true,
  get: function get() {
    return _fileAliases.setPathPrefix;
  }
});
Object.defineProperty(exports, "getPathPrefix", {
  enumerable: true,
  get: function get() {
    return _fileAliases.getPathPrefix;
  }
});
Object.defineProperty(exports, "resolvePath", {
  enumerable: true,
  get: function get() {
    return _fileAliases.resolvePath;
  }
});
Object.defineProperty(exports, "fetchFile", {
  enumerable: true,
  get: function get() {
    return _fetchFile.fetchFile;
  }
});
Object.defineProperty(exports, "readFileSync", {
  enumerable: true,
  get: function get() {
    return _fetchFile.readFileSync;
  }
});
Object.defineProperty(exports, "createReadStream", {
  enumerable: true,
  get: function get() {
    return _fetchFile.createReadStream;
  }
});
Object.defineProperty(exports, "writeFile", {
  enumerable: true,
  get: function get() {
    return _writeFile.writeFile;
  }
});
Object.defineProperty(exports, "writeFileSync", {
  enumerable: true,
  get: function get() {
    return _writeFile.writeFileSync;
  }
});
Object.defineProperty(exports, "registerLoaders", {
  enumerable: true,
  get: function get() {
    return _registerLoaders.registerLoaders;
  }
});
Object.defineProperty(exports, "parse", {
  enumerable: true,
  get: function get() {
    return _parse.parse;
  }
});
Object.defineProperty(exports, "parseSync", {
  enumerable: true,
  get: function get() {
    return _parse.parseSync;
  }
});
Object.defineProperty(exports, "parseInBatches", {
  enumerable: true,
  get: function get() {
    return _parse.parseInBatches;
  }
});
Object.defineProperty(exports, "parseInBatchesSync", {
  enumerable: true,
  get: function get() {
    return _parse.parseInBatchesSync;
  }
});
Object.defineProperty(exports, "load", {
  enumerable: true,
  get: function get() {
    return _load.load;
  }
});
Object.defineProperty(exports, "loadInBatches", {
  enumerable: true,
  get: function get() {
    return _load.loadInBatches;
  }
});
Object.defineProperty(exports, "encode", {
  enumerable: true,
  get: function get() {
    return _encode.encode;
  }
});
Object.defineProperty(exports, "encodeSync", {
  enumerable: true,
  get: function get() {
    return _encode.encodeSync;
  }
});
Object.defineProperty(exports, "encodeInBatches", {
  enumerable: true,
  get: function get() {
    return _encode.encodeInBatches;
  }
});
Object.defineProperty(exports, "save", {
  enumerable: true,
  get: function get() {
    return _save.save;
  }
});
Object.defineProperty(exports, "saveSync", {
  enumerable: true,
  get: function get() {
    return _save.saveSync;
  }
});
Object.defineProperty(exports, "isPromise", {
  enumerable: true,
  get: function get() {
    return _isType.isPromise;
  }
});
Object.defineProperty(exports, "isIterable", {
  enumerable: true,
  get: function get() {
    return _isType.isIterable;
  }
});
Object.defineProperty(exports, "isAsyncIterable", {
  enumerable: true,
  get: function get() {
    return _isType.isAsyncIterable;
  }
});
Object.defineProperty(exports, "isIterator", {
  enumerable: true,
  get: function get() {
    return _isType.isIterator;
  }
});
Object.defineProperty(exports, "isFetchResponse", {
  enumerable: true,
  get: function get() {
    return _isType.isFetchResponse;
  }
});
Object.defineProperty(exports, "isReadableStream", {
  enumerable: true,
  get: function get() {
    return _isType.isReadableStream;
  }
});
Object.defineProperty(exports, "isWritableStream", {
  enumerable: true,
  get: function get() {
    return _isType.isWritableStream;
  }
});
Object.defineProperty(exports, "isArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.isArrayBuffer;
  }
});
Object.defineProperty(exports, "isBlob", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.isBlob;
  }
});
Object.defineProperty(exports, "toArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.toArrayBuffer;
  }
});
Object.defineProperty(exports, "blobToArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.blobToArrayBuffer;
  }
});
Object.defineProperty(exports, "toDataView", {
  enumerable: true,
  get: function get() {
    return _binaryUtils.toDataView;
  }
});
Object.defineProperty(exports, "padTo4Bytes", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.padTo4Bytes;
  }
});
Object.defineProperty(exports, "copyToArray", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.copyToArray;
  }
});
Object.defineProperty(exports, "copyArrayBuffer", {
  enumerable: true,
  get: function get() {
    return _memoryCopyUtils.copyArrayBuffer;
  }
});
Object.defineProperty(exports, "flattenToTypedArray", {
  enumerable: true,
  get: function get() {
    return _flattenToTypedArray.flattenToTypedArray;
  }
});
Object.defineProperty(exports, "TextDecoder", {
  enumerable: true,
  get: function get() {
    return _textEncoding.TextDecoder;
  }
});
Object.defineProperty(exports, "TextEncoder", {
  enumerable: true,
  get: function get() {
    return _textEncoding.TextEncoder;
  }
});
Object.defineProperty(exports, "getStreamIterator", {
  enumerable: true,
  get: function get() {
    return _streamUtils.getStreamIterator;
  }
});
Object.defineProperty(exports, "forEach", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.forEach;
  }
});
Object.defineProperty(exports, "concatenateAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.concatenateAsyncIterator;
  }
});
Object.defineProperty(exports, "lineAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.lineAsyncIterator;
  }
});
Object.defineProperty(exports, "textDecoderAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.textDecoderAsyncIterator;
  }
});
Object.defineProperty(exports, "numberedLineAsyncIterator", {
  enumerable: true,
  get: function get() {
    return _asyncIteratorUtils.numberedLineAsyncIterator;
  }
});
Object.defineProperty(exports, "createWorker", {
  enumerable: true,
  get: function get() {
    return _createWorker["default"];
  }
});
Object.defineProperty(exports, "isBrowser", {
  enumerable: true,
  get: function get() {
    return _globals.isBrowser;
  }
});
Object.defineProperty(exports, "self", {
  enumerable: true,
  get: function get() {
    return _globals.self;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function get() {
    return _globals.window;
  }
});
Object.defineProperty(exports, "global", {
  enumerable: true,
  get: function get() {
    return _globals.global;
  }
});
Object.defineProperty(exports, "document", {
  enumerable: true,
  get: function get() {
    return _globals.document;
  }
});
Object.defineProperty(exports, "assert", {
  enumerable: true,
  get: function get() {
    return _assert["default"];
  }
});
Object.defineProperty(exports, "_getMeshSize", {
  enumerable: true,
  get: function get() {
    return _meshUtils.getMeshSize;
  }
});

var _fileAliases = require("./lib/fetch/file-aliases.js");

var _fetchFile = require("./lib/fetch/fetch-file");

var _writeFile = require("./lib/fetch/write-file");

var _registerLoaders = require("./lib/register-loaders");

var _parse = require("./lib/parse");

var _load = require("./lib/load");

var _encode = require("./lib/encode");

var _save = require("./lib/save");

var _isType = require("./javascript-utils/is-type");

var _binaryUtils = require("./javascript-utils/binary-utils");

var _memoryCopyUtils = require("./javascript-utils/memory-copy-utils");

var _flattenToTypedArray = require("./javascript-utils/flatten-to-typed-array");

var _textEncoding = require("./javascript-utils/text-encoding");

var _streamUtils = require("./javascript-utils/stream-utils");

var _asyncIteratorUtils = require("./javascript-utils/async-iterator-utils");

var _createWorker = _interopRequireDefault(require("./worker-utils/create-worker"));

var _globals = require("./utils/globals");

var _assert = _interopRequireDefault(require("./utils/assert"));

var _meshUtils = require("./categories/mesh/mesh-utils");

function parseFile() {
  console.warn('parse() deprecated, use parse()');
  return _parse.parse.apply(void 0, arguments);
}

function parseFileSync() {
  console.warn('parseSync() deprecated, use parseSync()');
  return _parse.parseSync.apply(void 0, arguments);
}

function loadFile() {
  console.warn('loadFile() deprecated, use load()');
  return _load.load.apply(void 0, arguments);
}
//# sourceMappingURL=index.js.map