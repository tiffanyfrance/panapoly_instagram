{"version":3,"sources":["../../src/index.js"],"names":["parseFile","console","warn","parse","parseFileSync","parseSync","loadFile","load"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AAGA;;AACA;;AAGA;;AAUA;;AAQA;;AACA;;AACA;;AAGA;;AAEA;;AASA;;AAGA;;AACA;;AAGA;;AAQO,SAASA,SAAT,GAA4B;AACjCC,EAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,SAAOC,qCAAP;AACD;;AAEM,SAASC,aAAT,GAAgC;AACrCH,EAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,SAAOG,yCAAP;AACD;;AAEM,SAASC,QAAT,GAA2B;AAChCL,EAAAA,OAAO,CAACC,IAAR,CAAa,mCAAb;AACA,SAAOK,mCAAP;AACD","sourcesContent":["// FILE READING AND WRITING\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/fetch/file-aliases.js';\nexport {fetchFile, readFileSync} from './lib/fetch/fetch-file';\nexport {writeFile, writeFileSync} from './lib/fetch/write-file';\n\n// FILE PARSING AND ENCODING\nexport {registerLoaders} from './lib/register-loaders';\n\n// LOADING (READING + PARSING)\nexport {parse, parseSync, parseInBatches, parseInBatchesSync} from './lib/parse';\nexport {load, loadInBatches} from './lib/load';\n\n// ENCODING AND SAVING\nexport {encode, encodeSync, encodeInBatches} from './lib/encode';\nexport {save, saveSync} from './lib/save';\n\n// \"JAVASCRIPT\" UTILS\nexport {\n  isPromise,\n  isIterable,\n  isAsyncIterable,\n  isIterator,\n  isFetchResponse,\n  isReadableStream,\n  isWritableStream\n} from './javascript-utils/is-type';\n\nexport {\n  isArrayBuffer,\n  isBlob,\n  toArrayBuffer,\n  blobToArrayBuffer,\n  toDataView\n} from './javascript-utils/binary-utils';\n\nexport {padTo4Bytes, copyToArray, copyArrayBuffer} from './javascript-utils/memory-copy-utils';\nexport {flattenToTypedArray} from './javascript-utils/flatten-to-typed-array';\nexport {TextDecoder, TextEncoder} from './javascript-utils/text-encoding';\n\n// ITERATOR UTILS\nexport {getStreamIterator} from './javascript-utils/stream-utils';\n\nexport {\n  forEach,\n  concatenateAsyncIterator,\n  lineAsyncIterator,\n  textDecoderAsyncIterator,\n  numberedLineAsyncIterator\n} from './javascript-utils/async-iterator-utils';\n\n// WORKER UTILS\nexport {default as createWorker} from './worker-utils/create-worker';\n\n// CORE UTILS\nexport {isBrowser, self, window, global, document} from './utils/globals';\nexport {default as assert} from './utils/assert';\n\n// MESH CATEGORY UTILS\nexport {getMeshSize as _getMeshSize} from './categories/mesh/mesh-utils';\n\n// DEPRECATED\nexport {createReadStream} from './lib/fetch/fetch-file';\n\nimport {parse, parseSync} from './lib/parse';\nimport {load} from './lib/load';\n\nexport function parseFile(...args) {\n  console.warn('parse() deprecated, use parse()'); // eslint-disable-line\n  return parse(...args);\n}\n\nexport function parseFileSync(...args) {\n  console.warn('parseSync() deprecated, use parseSync()'); // eslint-disable-line\n  return parseSync(...args);\n}\n\nexport function loadFile(...args) {\n  console.warn('loadFile() deprecated, use load()'); // eslint-disable-line\n  return load(...args);\n}\n"],"file":"index.js"}