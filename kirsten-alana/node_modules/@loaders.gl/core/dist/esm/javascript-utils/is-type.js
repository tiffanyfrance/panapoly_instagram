import _typeof from "@babel/runtime/helpers/esm/typeof";

var isBoolean = function isBoolean(x) {
  return typeof x === 'boolean';
};

var isFunction = function isFunction(x) {
  return typeof x === 'function';
};

var isObject = function isObject(x) {
  return x !== null && _typeof(x) === 'object';
};

export var isPromise = function isPromise(x) {
  return isObject(x) && isFunction(x.then);
};
export var isIterable = function isIterable(x) {
  return x && typeof x[Symbol.iterator] === 'function';
};
export var isAsyncIterable = function isAsyncIterable(x) {
  return x && typeof x[Symbol.asyncIterator] === 'function';
};
export var isIterator = function isIterator(x) {
  return isObject(x) && 'done' in x && 'value' in x;
};
export var isFetchResponse = function isFetchResponse(x) {
  return typeof window !== 'undefined' && x instanceof window.Response || x.arrayBuffer && x.json && x.body;
};
export var isWritableDOMStream = function isWritableDOMStream(x) {
  return isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);
};
export var isReadableDOMStream = function isReadableDOMStream(x) {
  return isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.pipeTo) && isFunction(x.getReader);
};
export var isWritableNodeStream = function isWritableNodeStream(x) {
  return isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);
};
export var isReadableNodeStream = function isReadableNodeStream(x) {
  return isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);
};
export var isReadableStream = function isReadableStream(x) {
  return isReadableDOMStream(x) || isReadableNodeStream(x);
};
export var isWritableStream = function isWritableStream(x) {
  return isWritableDOMStream(x) || isWritableNodeStream(x);
};
//# sourceMappingURL=is-type.js.map