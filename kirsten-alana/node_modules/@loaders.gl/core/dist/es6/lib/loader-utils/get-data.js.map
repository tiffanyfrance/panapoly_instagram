{"version":3,"sources":["../../../../src/lib/loader-utils/get-data.js"],"names":["isFetchResponse","isReadableStream","isAsyncIterable","isIterable","isIterator","getStreamIterator","TextDecoder","ERR_DATA","getUrlFromData","data","url","getSizeFromData","headers","get","getArrayBufferOrStringFromDataSync","loader","text","ArrayBuffer","isView","arrayBuffer","buffer","binary","textDecoder","decode","Error","getArrayBufferOrStringFromData","isArrayBuffer","getAsyncIteratorFromData","body","Symbol","asyncIterator","getIteratorFromData","oneChunk","iterator"],"mappings":"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","sourcesContent":["import {\n  isFetchResponse,\n  isReadableStream,\n  isAsyncIterable,\n  isIterable,\n  isIterator\n} from '../../javascript-utils/is-type';\nimport {getStreamIterator} from '../../javascript-utils/stream-utils';\nimport {TextDecoder} from '../../javascript-utils/text-encoding';\n\nconst ERR_DATA = 'Cannot convert supplied data type';\n\nexport function getUrlFromData(data) {\n  return isFetchResponse(data) ? data.url : null;\n}\n\nexport function getSizeFromData(data) {\n  return isFetchResponse(data) ? data.headers.get('Content-Length') : null;\n}\nexport function getArrayBufferOrStringFromDataSync(data, loader) {\n  if (loader.text && typeof data === 'string') {\n    return data;\n  }\n\n  if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n    const arrayBuffer = data.buffer || data;\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(arrayBuffer);\n    }\n    return arrayBuffer;\n  }\n\n  throw new Error(ERR_DATA);\n}\n\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(data, loader) {\n  // Resolve any promise\n  data = await data;\n\n  const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n  if (typeof data === 'string' || isArrayBuffer) {\n    return getArrayBufferOrStringFromDataSync(data, loader);\n  }\n\n  if (isFetchResponse(data)) {\n    return loader.binary ? await data.arrayBuffer() : data.text();\n  }\n\n  // if (isIterable(data) || isAsyncIterable(data)) {\n  // }\n\n  // Assume arrayBuffer iterator - attempt to concatenate\n  // return concatenateAsyncIterator(data);\n\n  throw new Error(ERR_DATA);\n}\n\nexport async function getAsyncIteratorFromData(data, loader) {\n  if (isIterator(data)) {\n    return data;\n  }\n\n  if (isFetchResponse(data)) {\n    return getStreamIterator(data.body);\n  }\n\n  if (isReadableStream(data)) {\n    return getStreamIterator(data);\n  }\n\n  if (isAsyncIterable(data)) {\n    return data[Symbol.asyncIterator]();\n  }\n\n  return getIteratorFromData(data, loader);\n}\n\nexport async function getIteratorFromData(data, loader) {\n  // generate an iterator that emits a single chunk\n  if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n    return (function* oneChunk() {\n      yield data.buffer || data;\n    })();\n  }\n\n  if (isIterator(data)) {\n    return data;\n  }\n\n  if (isIterable(data)) {\n    return data[Symbol.iterator]();\n  }\n\n  throw new Error(ERR_DATA);\n}\n"],"file":"get-data.js"}