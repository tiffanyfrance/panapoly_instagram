{"version":3,"sources":["../../../src/lib/register-loaders.js"],"names":["normalizeLoader","registeredLoaders","registerLoaders","loaders","Array","isArray","loader","extension","extensions","getRegisteredLoaders","Object","values"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,iCAA9B;AAEA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvCA,EAAAA,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAA7C;;AACA,OAAK,MAAMG,MAAX,IAAqBH,OAArB,EAA8B;AAC5BH,IAAAA,eAAe,CAACM,MAAD,CAAf;;AACA,SAAK,MAAMC,SAAX,IAAwBD,MAAM,CAACE,UAA/B,EAA2C;AACzCP,MAAAA,iBAAiB,CAACM,SAAD,CAAjB,GAA+BD,MAA/B;AACD;AACF;AACF;AAED,OAAO,SAASG,oBAAT,GAAgC;AACrC,SAAOC,MAAM,CAACC,MAAP,CAAcV,iBAAd,CAAP;AACD","sourcesContent":["import {normalizeLoader} from './loader-utils/normalize-loader';\n\nconst registeredLoaders = {};\n\nexport function registerLoaders(loaders) {\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n    for (const extension of loader.extensions) {\n      registeredLoaders[extension] = loader;\n    }\n  }\n}\n\nexport function getRegisteredLoaders() {\n  return Object.values(registeredLoaders);\n}\n"],"file":"register-loaders.js"}