import fs from 'fs';
import { promisify } from 'util';
import assert from '../../utils/assert';
export function writeFile(filePath, arrayBufferOrString) {
  return promisify(fs.writeFile)("".concat(filePath), toBuffer(arrayBufferOrString), {
    flag: 'w'
  });
}
export function writeFileSync(filePath, arrayBufferOrString) {
  return fs.writeFileSync("".concat(filePath), toBuffer(arrayBufferOrString), {
    flag: 'w'
  });
}

function toBuffer(binaryData) {
  if (ArrayBuffer.isView(binaryData)) {
    binaryData = binaryData.buffer;
  }

  if (typeof Buffer !== 'undefined' && binaryData instanceof ArrayBuffer) {
    const buffer = new Buffer(binaryData.byteLength);
    const view = new Uint8Array(binaryData);

    for (let i = 0; i < buffer.length; ++i) {
      buffer[i] = view[i];
    }

    return buffer;
  }

  return assert(false);
}
//# sourceMappingURL=write-file-node.js.map