{"ast":null,"code":"import { fp64 } from '@luma.gl/core';\nvar fp64ify = fp64.fp64ify,\n    fp64ifyMatrix4 = fp64.fp64ifyMatrix4;\nimport project from '../project/project';\nimport memoize from '../../utils/memoize';\nimport project64Shader from './project64.glsl';\nexport default {\n  name: 'project64',\n  dependencies: [project, fp64],\n  vs: project64Shader,\n  getUniforms: getUniforms,\n  deprecations: [{\n    type: 'function',\n    old: 'project_to_clipspace_fp64',\n    new: 'project_common_position_to_clipspace_fp64'\n  }]\n};\nvar DEFAULT_MODULE_OPTIONS = {};\nvar getMemoizedUniforms = memoize(calculateUniforms);\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MODULE_OPTIONS;\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var project_uViewProjectionMatrix = context.project_uViewProjectionMatrix,\n      project_uScale = context.project_uScale;\n\n  if (project_uViewProjectionMatrix && project_uScale) {\n    return getMemoizedUniforms({\n      project_uViewProjectionMatrix: project_uViewProjectionMatrix,\n      project_uScale: project_uScale\n    });\n  }\n\n  return {};\n}\n\nfunction calculateUniforms(_ref) {\n  var project_uViewProjectionMatrix = _ref.project_uViewProjectionMatrix,\n      project_uScale = _ref.project_uScale;\n  var glViewProjectionMatrixFP64 = fp64ifyMatrix4(project_uViewProjectionMatrix);\n  var scaleFP64 = fp64ify(project_uScale);\n  return {\n    project_uViewProjectionMatrixFP64: glViewProjectionMatrixFP64,\n    project64_uViewProjectionMatrix: glViewProjectionMatrixFP64,\n    project64_uScale: scaleFP64\n  };\n}","map":null,"metadata":{},"sourceType":"module"}