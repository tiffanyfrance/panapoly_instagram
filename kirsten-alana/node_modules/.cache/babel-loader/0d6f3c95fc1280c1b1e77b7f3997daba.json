{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nexport function tile2latLng(x, y, z) {\n  var lng = x / Math.pow(2, z) * 360 - 180;\n  var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n  var lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\nexport function tile2boundingBox(x, y, z) {\n  var _tile2latLng = tile2latLng(x, y, z),\n      _tile2latLng2 = _slicedToArray(_tile2latLng, 2),\n      west = _tile2latLng2[0],\n      north = _tile2latLng2[1];\n\n  var _tile2latLng3 = tile2latLng(x + 1, y + 1, z),\n      _tile2latLng4 = _slicedToArray(_tile2latLng3, 2),\n      east = _tile2latLng4[0],\n      south = _tile2latLng4[1];\n\n  return {\n    west: west,\n    north: north,\n    east: east,\n    south: south\n  };\n}\n\nvar Tile = function () {\n  function Tile(_ref) {\n    var getTileData = _ref.getTileData,\n        x = _ref.x,\n        y = _ref.y,\n        z = _ref.z,\n        onTileError = _ref.onTileError;\n\n    _classCallCheck(this, Tile);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.bbox = tile2boundingBox(this.x, this.y, this.z);\n    this.isVisible = true;\n    this.getTileData = getTileData;\n    this._data = null;\n    this._isLoaded = false;\n    this._loader = this._loadData();\n    this.onTileError = onTileError;\n  }\n\n  _createClass(Tile, [{\n    key: \"_loadData\",\n    value: function _loadData() {\n      var _this = this;\n\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n\n      if (!this.getTileData) {\n        return null;\n      }\n\n      var getTileDataPromise = this.getTileData({\n        x: x,\n        y: y,\n        z: z\n      });\n      return getTileDataPromise.then(function (buffers) {\n        _this._data = buffers;\n        _this._isLoaded = true;\n        return buffers;\n      }).catch(function (err) {\n        _this._isLoaded = true;\n\n        _this.onTileError(err);\n      });\n    }\n  }, {\n    key: \"isOverlapped\",\n    value: function isOverlapped(tile) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var m = Math.pow(2, tile.z - z);\n      return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      if (this._data) {\n        return Promise.resolve(this._data);\n      }\n\n      return this._loader;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._isLoaded;\n    }\n  }]);\n\n  return Tile;\n}();\n\nexport { Tile as default };","map":null,"metadata":{},"sourceType":"module"}