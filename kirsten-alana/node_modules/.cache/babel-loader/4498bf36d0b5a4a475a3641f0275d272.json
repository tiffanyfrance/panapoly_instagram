{"ast":null,"code":"import { log } from '@deck.gl/core';\nexport function linearScale(domain, range, value) {\n  return (value - domain[0]) / (domain[1] - domain[0]) * (range[1] - range[0]) + range[0];\n}\nexport function quantizeScale(domain, range, value) {\n  var domainRange = domain[1] - domain[0];\n\n  if (domainRange <= 0) {\n    log.warn('quantizeScale: invalid domain, returning range[0]')();\n    return range[0];\n  }\n\n  var step = domainRange / range.length;\n  var idx = Math.floor((value - domain[0]) / step);\n  var clampIdx = Math.max(Math.min(idx, range.length - 1), 0);\n  return range[clampIdx];\n}\nexport function getQuantizeScale(domain, range) {\n  return function (value) {\n    return quantizeScale(domain, range, value);\n  };\n}\nexport function getLinearScale(domain, range) {\n  return function (value) {\n    return (value - domain[0]) / (domain[1] - domain[0]) * (range[1] - range[0]) + range[0];\n  };\n}","map":null,"metadata":{},"sourceType":"module"}