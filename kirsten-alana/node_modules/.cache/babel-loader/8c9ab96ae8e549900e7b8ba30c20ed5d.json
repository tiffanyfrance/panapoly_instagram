{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { AmbientLight } from '@luma.gl/core';\nimport DirectionalLight from './directional-light';\nimport Effect from '../../lib/effect';\nvar DefaultAmbientLightProps = {\n  color: [255, 255, 255],\n  intensity: 1.0\n};\nvar DefaultDirectionalLightProps = [{\n  color: [255, 255, 255],\n  intensity: 1.0,\n  direction: [-1, -3, -1]\n}, {\n  color: [255, 255, 255],\n  intensity: 0.9,\n  direction: [1, 8, -2.5]\n}];\n\nvar LightingEffect = function (_Effect) {\n  _inherits(LightingEffect, _Effect);\n\n  function LightingEffect(props) {\n    var _this;\n\n    _classCallCheck(this, LightingEffect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LightingEffect).call(this, props));\n    _this.ambientLight = null;\n    _this.directionalLights = [];\n    _this.pointLights = [];\n\n    for (var key in props) {\n      var lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          _this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          _this.directionalLights.push(lightSource);\n\n          break;\n\n        case 'point':\n          _this.pointLights.push(lightSource);\n\n          break;\n\n        default:\n      }\n    }\n\n    _this.applyDefaultLights();\n\n    return _this;\n  }\n\n  _createClass(LightingEffect, [{\n    key: \"getParameters\",\n    value: function getParameters(layer) {\n      var ambientLight = this.ambientLight;\n      var pointLights = this.getProjectedPointLights(layer);\n      var directionalLights = this.getProjectedDirectionalLights(layer);\n      return {\n        lightSources: {\n          ambientLight: ambientLight,\n          directionalLights: directionalLights,\n          pointLights: pointLights\n        }\n      };\n    }\n  }, {\n    key: \"applyDefaultLights\",\n    value: function applyDefaultLights() {\n      var ambientLight = this.ambientLight,\n          pointLights = this.pointLights,\n          directionalLights = this.directionalLights;\n\n      if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n        this.ambientLight = new AmbientLight(DefaultAmbientLightProps);\n        this.directionalLights.push(new DirectionalLight(DefaultDirectionalLightProps[0]));\n        this.directionalLights.push(new DirectionalLight(DefaultDirectionalLightProps[1]));\n      }\n    }\n  }, {\n    key: \"getProjectedPointLights\",\n    value: function getProjectedPointLights(layer) {\n      var projectedPointLights = [];\n\n      for (var i = 0; i < this.pointLights.length; i++) {\n        var pointLight = this.pointLights[i];\n        projectedPointLights.push(pointLight.getProjectedLight({\n          layer: layer\n        }));\n      }\n\n      return projectedPointLights;\n    }\n  }, {\n    key: \"getProjectedDirectionalLights\",\n    value: function getProjectedDirectionalLights(layer) {\n      var projectedDirectionalLights = [];\n\n      for (var i = 0; i < this.directionalLights.length; i++) {\n        var directionalLight = this.directionalLights[i];\n        projectedDirectionalLights.push(directionalLight.getProjectedLight({\n          layer: layer\n        }));\n      }\n\n      return projectedDirectionalLights;\n    }\n  }]);\n\n  return LightingEffect;\n}(Effect);\n\nexport { LightingEffect as default };","map":null,"metadata":{},"sourceType":"module"}