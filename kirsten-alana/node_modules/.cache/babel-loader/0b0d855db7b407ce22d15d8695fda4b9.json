{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport TransitionInterpolator from './transition-interpolator';\nimport { lerp } from 'math.gl';\nimport { flyToViewport } from 'viewport-mercator-project';\nvar LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\n\nvar FlyToInterpolator = function (_TransitionInterpolat) {\n  _inherits(FlyToInterpolator, _TransitionInterpolat);\n\n  function FlyToInterpolator() {\n    _classCallCheck(this, FlyToInterpolator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FlyToInterpolator).call(this, {\n      compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'],\n      extract: ['width', 'height', 'longitude', 'latitude', 'zoom', 'bearing', 'pitch'],\n      required: ['width', 'height', 'latitude', 'longitude', 'zoom']\n    }));\n  }\n\n  _createClass(FlyToInterpolator, [{\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = flyToViewport(startProps, endProps, t);\n\n      for (var _i = 0; _i < LINEARLY_INTERPOLATED_PROPS.length; _i++) {\n        var key = LINEARLY_INTERPOLATED_PROPS[_i];\n        viewport[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n      }\n\n      return viewport;\n    }\n  }]);\n\n  return FlyToInterpolator;\n}(TransitionInterpolator);\n\nexport { FlyToInterpolator as default };","map":null,"metadata":{},"sourceType":"module"}