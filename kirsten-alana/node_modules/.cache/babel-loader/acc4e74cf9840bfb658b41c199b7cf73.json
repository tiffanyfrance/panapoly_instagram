{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport View from './view';\nimport Viewport from '../viewports/viewport';\nimport { Matrix4, _SphericalCoordinates as SphericalCoordinates } from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch(_ref) {\n  var bearing = _ref.bearing,\n      pitch = _ref.pitch;\n  var spherical = new SphericalCoordinates({\n    bearing: bearing,\n    pitch: pitch\n  });\n  var direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nvar FirstPersonView = function (_View) {\n  _inherits(FirstPersonView, _View);\n\n  function FirstPersonView() {\n    _classCallCheck(this, FirstPersonView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FirstPersonView).apply(this, arguments));\n  }\n\n  _createClass(FirstPersonView, [{\n    key: \"_getViewport\",\n    value: function _getViewport(props) {\n      var _props$viewState = props.viewState,\n          _props$viewState$mode = _props$viewState.modelMatrix,\n          modelMatrix = _props$viewState$mode === void 0 ? null : _props$viewState$mode,\n          bearing = _props$viewState.bearing,\n          _props$viewState$up = _props$viewState.up,\n          up = _props$viewState$up === void 0 ? [0, 0, 1] : _props$viewState$up;\n      var dir = getDirectionFromBearingAndPitch({\n        bearing: bearing,\n        pitch: 89\n      });\n      var center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n      var viewMatrix = new Matrix4().lookAt({\n        eye: [0, 0, 0],\n        center: center,\n        up: up\n      });\n      return new Viewport(Object.assign({}, props, {\n        zoom: null,\n        viewMatrix: viewMatrix\n      }));\n    }\n  }, {\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: FirstPersonController\n      });\n    }\n  }]);\n\n  return FirstPersonView;\n}(View);\n\nexport { FirstPersonView as default };\nFirstPersonView.displayName = 'FirstPersonView';","map":null,"metadata":{},"sourceType":"module"}