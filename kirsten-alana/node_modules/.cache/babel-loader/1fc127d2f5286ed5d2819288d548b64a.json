{"ast":null,"code":"import fs from 'fs';\nimport { promisify } from 'util';\nimport assert from '../../utils/assert';\nexport function writeFile(filePath, arrayBufferOrString) {\n  return promisify(fs.writeFile)(\"\".concat(filePath), toBuffer(arrayBufferOrString), {\n    flag: 'w'\n  });\n}\nexport function writeFileSync(filePath, arrayBufferOrString) {\n  return fs.writeFileSync(\"\".concat(filePath), toBuffer(arrayBufferOrString), {\n    flag: 'w'\n  });\n}\n\nfunction toBuffer(binaryData) {\n  if (ArrayBuffer.isView(binaryData)) {\n    binaryData = binaryData.buffer;\n  }\n\n  if (typeof Buffer !== 'undefined' && binaryData instanceof ArrayBuffer) {\n    var buffer = new Buffer(binaryData.byteLength);\n    var view = new Uint8Array(binaryData);\n\n    for (var i = 0; i < buffer.length; ++i) {\n      buffer[i] = view[i];\n    }\n\n    return buffer;\n  }\n\n  return assert(false);\n}","map":null,"metadata":{},"sourceType":"module"}