{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport getPixels from 'get-pixels';\nimport util from 'util';\nimport { getImageMetadata } from '../lib/get-image-metadata';\nexport function parseImageNode(_x, _x2) {\n  return _parseImageNode.apply(this, arguments);\n}\n\nfunction _parseImageNode() {\n  _parseImageNode = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n    var getPixelsAsync, _getImageMetadata, mimeType, buffer, ndarray;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getPixelsAsync = util.promisify(getPixels);\n            _getImageMetadata = getImageMetadata(arrayBuffer), mimeType = _getImageMetadata.mimeType;\n            buffer = arrayBuffer instanceof Buffer ? arrayBuffer : Buffer.from(arrayBuffer);\n            _context.next = 5;\n            return getPixelsAsync(buffer, mimeType);\n\n          case 5:\n            ndarray = _context.sent;\n            return _context.abrupt(\"return\", {\n              width: ndarray.shape[0],\n              height: ndarray.shape[1],\n              data: ndarray.data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseImageNode.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}