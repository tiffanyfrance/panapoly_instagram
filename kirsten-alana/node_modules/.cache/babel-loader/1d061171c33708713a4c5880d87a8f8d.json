{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _UNIFORM_SETTERS;\n\nimport Framebuffer from './framebuffer';\nimport Renderbuffer from './renderbuffer';\nimport Texture from './texture';\nimport { log } from '../utils';\nvar UNIFORM_SETTERS = (_UNIFORM_SETTERS = {}, _defineProperty(_UNIFORM_SETTERS, 5126, function (gl, location, value) {\n  return gl.uniform1fv(location, toFloatArray(value, 1));\n}), _defineProperty(_UNIFORM_SETTERS, 35664, function (gl, location, value) {\n  return gl.uniform2fv(location, toFloatArray(value, 2));\n}), _defineProperty(_UNIFORM_SETTERS, 35665, function (gl, location, value) {\n  return gl.uniform3fv(location, toFloatArray(value, 3));\n}), _defineProperty(_UNIFORM_SETTERS, 35666, function (gl, location, value) {\n  return gl.uniform4fv(location, toFloatArray(value, 4));\n}), _defineProperty(_UNIFORM_SETTERS, 5124, function (gl, location, value) {\n  return gl.uniform1iv(location, toIntArray(value, 1));\n}), _defineProperty(_UNIFORM_SETTERS, 35667, function (gl, location, value) {\n  return gl.uniform2iv(location, toIntArray(value, 2));\n}), _defineProperty(_UNIFORM_SETTERS, 35668, function (gl, location, value) {\n  return gl.uniform3iv(location, toIntArray(value, 3));\n}), _defineProperty(_UNIFORM_SETTERS, 35669, function (gl, location, value) {\n  return gl.uniform4iv(location, toIntArray(value, 4));\n}), _defineProperty(_UNIFORM_SETTERS, 35670, function (gl, location, value) {\n  return gl.uniform1iv(location, toIntArray(value, 1));\n}), _defineProperty(_UNIFORM_SETTERS, 35671, function (gl, location, value) {\n  return gl.uniform2iv(location, toIntArray(value, 2));\n}), _defineProperty(_UNIFORM_SETTERS, 35672, function (gl, location, value) {\n  return gl.uniform3iv(location, toIntArray(value, 3));\n}), _defineProperty(_UNIFORM_SETTERS, 35673, function (gl, location, value) {\n  return gl.uniform4iv(location, toIntArray(value, 4));\n}), _defineProperty(_UNIFORM_SETTERS, 35674, function (gl, location, value) {\n  return gl.uniformMatrix2fv(location, false, toFloatArray(value, 4));\n}), _defineProperty(_UNIFORM_SETTERS, 35675, function (gl, location, value) {\n  return gl.uniformMatrix3fv(location, false, toFloatArray(value, 9));\n}), _defineProperty(_UNIFORM_SETTERS, 35676, function (gl, location, value) {\n  return gl.uniformMatrix4fv(location, false, toFloatArray(value, 16));\n}), _defineProperty(_UNIFORM_SETTERS, 35678, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 35680, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 5125, function (gl, location, value) {\n  return gl.uniform1uiv(location, toUIntArray(value, 1));\n}), _defineProperty(_UNIFORM_SETTERS, 36294, function (gl, location, value) {\n  return gl.uniform2uiv(location, toUIntArray(value, 2));\n}), _defineProperty(_UNIFORM_SETTERS, 36295, function (gl, location, value) {\n  return gl.uniform3uiv(location, toUIntArray(value, 3));\n}), _defineProperty(_UNIFORM_SETTERS, 36296, function (gl, location, value) {\n  return gl.uniform4uiv(location, toUIntArray(value, 4));\n}), _defineProperty(_UNIFORM_SETTERS, 35685, function (gl, location, value) {\n  return gl.uniformMatrix2x3fv(location, false, toFloatArray(value, 6));\n}), _defineProperty(_UNIFORM_SETTERS, 35686, function (gl, location, value) {\n  return gl.uniformMatrix2x4fv(location, false, toFloatArray(value, 8));\n}), _defineProperty(_UNIFORM_SETTERS, 35687, function (gl, location, value) {\n  return gl.uniformMatrix3x2fv(location, false, toFloatArray(value, 6));\n}), _defineProperty(_UNIFORM_SETTERS, 35688, function (gl, location, value) {\n  return gl.uniformMatrix3x4fv(location, false, toFloatArray(value, 12));\n}), _defineProperty(_UNIFORM_SETTERS, 35689, function (gl, location, value) {\n  return gl.uniformMatrix4x2fv(location, false, toFloatArray(value, 8));\n}), _defineProperty(_UNIFORM_SETTERS, 35690, function (gl, location, value) {\n  return gl.uniformMatrix4x3fv(location, false, toFloatArray(value, 12));\n}), _defineProperty(_UNIFORM_SETTERS, 35679, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 35682, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36289, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36292, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36293, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36298, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36299, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36300, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36303, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36306, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36307, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36308, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _defineProperty(_UNIFORM_SETTERS, 36311, function (gl, location, value) {\n  return gl.uniform1i(location, value);\n}), _UNIFORM_SETTERS);\nvar FLOAT_ARRAY = {};\nvar INT_ARRAY = {};\nvar UINT_ARRAY = {};\nvar array1 = [0];\n\nfunction toTypedArray(value, uniformLength, Type, cache) {\n  if (uniformLength === 1 && typeof value === 'boolean') {\n    value = value ? 1 : 0;\n  }\n\n  if (Number.isFinite(value)) {\n    array1[0] = value;\n    value = array1;\n  }\n\n  var length = value.length;\n\n  if (length % uniformLength) {\n    log.warn(\"Uniform size should be multiples of \".concat(uniformLength), value)();\n  }\n\n  if (value instanceof Type) {\n    return value;\n  }\n\n  var result = cache[length];\n\n  if (!result) {\n    result = new Type(length);\n    cache[length] = result;\n  }\n\n  for (var i = 0; i < length; i++) {\n    result[i] = value[i];\n  }\n\n  return result;\n}\n\nfunction toFloatArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\n\nfunction toIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\n\nfunction toUIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n}\n\nexport function parseUniformName(name) {\n  if (name[name.length - 1] !== ']') {\n    return {\n      name: name,\n      length: 1,\n      isArray: false\n    };\n  }\n\n  var UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\n  var matches = name.match(UNIFORM_NAME_REGEXP);\n\n  if (!matches || matches.length < 2) {\n    throw new Error(\"Failed to parse GLSL uniform name \".concat(name));\n  }\n\n  return {\n    name: matches[1],\n    length: matches[2] || 1,\n    isArray: Boolean(matches[2])\n  };\n}\nexport function getUniformSetter(gl, location, info) {\n  var setter = UNIFORM_SETTERS[info.type];\n\n  if (!setter) {\n    throw new Error(\"Unknown GLSL uniform type \".concat(info.type));\n  }\n\n  return setter.bind(null, gl, location);\n}\nexport function checkUniformValues(uniforms, source, uniformMap) {\n  for (var uniformName in uniforms) {\n    var value = uniforms[uniformName];\n    var shouldCheck = !uniformMap || Boolean(uniformMap[uniformName]);\n\n    if (shouldCheck && !checkUniformValue(value)) {\n      source = source ? \"\".concat(source, \" \") : '';\n      console.error(\"\".concat(source, \" Bad uniform \").concat(uniformName), value);\n      throw new Error(\"\".concat(source, \" Bad uniform \").concat(uniformName));\n    }\n  }\n\n  return true;\n}\n\nfunction checkUniformValue(value) {\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n    return checkUniformArray(value);\n  }\n\n  if (isFinite(value)) {\n    return true;\n  } else if (value === true || value === false) {\n    return true;\n  } else if (value instanceof Texture) {\n    return true;\n  } else if (value instanceof Renderbuffer) {\n    return true;\n  } else if (value instanceof Framebuffer) {\n    return Boolean(value.texture);\n  }\n\n  return false;\n}\n\nfunction checkUniformArray(value) {\n  if (value.length === 0) {\n    return false;\n  }\n\n  var checkLength = Math.min(value.length, 16);\n\n  for (var i = 0; i < checkLength; ++i) {\n    if (!Number.isFinite(value[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function areUniformsEqual(uniform1, uniform2) {\n  if (Array.isArray(uniform1) || ArrayBuffer.isView(uniform1)) {\n    if (!uniform2) {\n      return false;\n    }\n\n    var len = uniform1.length;\n\n    if (uniform2.length !== len) {\n      return false;\n    }\n\n    for (var i = 0; i < len; i++) {\n      if (uniform1[i] !== uniform2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return uniform1 === uniform2;\n}\nexport function getUniformCopy(uniform) {\n  if (Array.isArray(uniform) || ArrayBuffer.isView(uniform)) {\n    return uniform.slice();\n  }\n\n  return uniform;\n}","map":null,"metadata":{},"sourceType":"module"}