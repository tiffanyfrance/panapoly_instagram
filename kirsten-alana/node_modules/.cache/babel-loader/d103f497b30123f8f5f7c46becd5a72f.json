{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar LRUCache = function () {\n  function LRUCache() {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n\n    _classCallCheck(this, LRUCache);\n\n    this.limit = limit;\n    this.clear();\n  }\n\n  _createClass(LRUCache, [{\n    key: \"clear\",\n    value: function clear() {\n      this._cache = {};\n      this._order = [];\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var value = this._cache[key];\n\n      if (value) {\n        this._deleteOrder(key);\n\n        this._appendOrder(key);\n      }\n\n      return value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (!this._cache[key]) {\n        if (Object.keys(this._cache).length === this.limit) {\n          this.delete(this._order[0]);\n        }\n\n        this._cache[key] = value;\n\n        this._appendOrder(key);\n      } else {\n        this.delete(key);\n        this._cache[key] = value;\n\n        this._appendOrder(key);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var value = this._cache[key];\n\n      if (value) {\n        this._deleteCache(key);\n\n        this._deleteOrder(key);\n      }\n    }\n  }, {\n    key: \"_deleteCache\",\n    value: function _deleteCache(key) {\n      delete this._cache[key];\n    }\n  }, {\n    key: \"_deleteOrder\",\n    value: function _deleteOrder(key) {\n      var index = this._order.findIndex(function (o) {\n        return o === key;\n      });\n\n      if (index >= 0) {\n        this._order.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"_appendOrder\",\n    value: function _appendOrder(key) {\n      this._order.push(key);\n    }\n  }]);\n\n  return LRUCache;\n}();\n\nexport { LRUCache as default };","map":null,"metadata":{},"sourceType":"module"}