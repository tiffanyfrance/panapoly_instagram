{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar isBoolean = function isBoolean(x) {\n  return typeof x === 'boolean';\n};\n\nvar isFunction = function isFunction(x) {\n  return typeof x === 'function';\n};\n\nvar isObject = function isObject(x) {\n  return x !== null && _typeof(x) === 'object';\n};\n\nexport var isPromise = function isPromise(x) {\n  return isObject(x) && isFunction(x.then);\n};\nexport var isIterable = function isIterable(x) {\n  return x && typeof x[Symbol.iterator] === 'function';\n};\nexport var isAsyncIterable = function isAsyncIterable(x) {\n  return x && typeof x[Symbol.asyncIterator] === 'function';\n};\nexport var isIterator = function isIterator(x) {\n  return isObject(x) && 'done' in x && 'value' in x;\n};\nexport var isFetchResponse = function isFetchResponse(x) {\n  return typeof window !== 'undefined' && x instanceof window.Response || x.arrayBuffer && x.json && x.body;\n};\nexport var isWritableDOMStream = function isWritableDOMStream(x) {\n  return isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\n};\nexport var isReadableDOMStream = function isReadableDOMStream(x) {\n  return isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.pipeTo) && isFunction(x.getReader);\n};\nexport var isWritableNodeStream = function isWritableNodeStream(x) {\n  return isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\n};\nexport var isReadableNodeStream = function isReadableNodeStream(x) {\n  return isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\n};\nexport var isReadableStream = function isReadableStream(x) {\n  return isReadableDOMStream(x) || isReadableNodeStream(x);\n};\nexport var isWritableStream = function isWritableStream(x) {\n  return isWritableDOMStream(x) || isWritableNodeStream(x);\n};","map":null,"metadata":{},"sourceType":"module"}