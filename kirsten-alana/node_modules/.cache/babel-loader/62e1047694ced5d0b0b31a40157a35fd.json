{"ast":null,"code":"export { setPathPrefix, getPathPrefix, resolvePath } from './lib/fetch/file-aliases.js';\nexport { fetchFile, readFileSync } from './lib/fetch/fetch-file';\nexport { writeFile, writeFileSync } from './lib/fetch/write-file';\nexport { registerLoaders } from './lib/register-loaders';\nexport { parse, parseSync, parseInBatches, parseInBatchesSync } from './lib/parse';\nexport { load, loadInBatches } from './lib/load';\nexport { encode, encodeSync, encodeInBatches } from './lib/encode';\nexport { save, saveSync } from './lib/save';\nexport { isPromise, isIterable, isAsyncIterable, isIterator, isFetchResponse, isReadableStream, isWritableStream } from './javascript-utils/is-type';\nexport { isArrayBuffer, isBlob, toArrayBuffer, blobToArrayBuffer, toDataView } from './javascript-utils/binary-utils';\nexport { padTo4Bytes, copyToArray, copyArrayBuffer } from './javascript-utils/memory-copy-utils';\nexport { flattenToTypedArray } from './javascript-utils/flatten-to-typed-array';\nexport { TextDecoder, TextEncoder } from './javascript-utils/text-encoding';\nexport { getStreamIterator } from './javascript-utils/stream-utils';\nexport { forEach, concatenateAsyncIterator, lineAsyncIterator, textDecoderAsyncIterator, numberedLineAsyncIterator } from './javascript-utils/async-iterator-utils';\nexport { default as createWorker } from './worker-utils/create-worker';\nexport { isBrowser, self, window, global, document } from './utils/globals';\nexport { default as assert } from './utils/assert';\nexport { getMeshSize as _getMeshSize } from './categories/mesh/mesh-utils';\nexport { createReadStream } from './lib/fetch/fetch-file';\nimport { parse, parseSync } from './lib/parse';\nimport { load } from './lib/load';\nexport function parseFile() {\n  console.warn('parse() deprecated, use parse()');\n  return parse.apply(void 0, arguments);\n}\nexport function parseFileSync() {\n  console.warn('parseSync() deprecated, use parseSync()');\n  return parseSync.apply(void 0, arguments);\n}\nexport function loadFile() {\n  console.warn('loadFile() deprecated, use load()');\n  return load.apply(void 0, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}