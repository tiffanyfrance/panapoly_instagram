{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Texture2D from '../classes/texture-2d';\nimport TextureCube from '../classes/texture-cube';\nimport Texture3D from '../classes/texture-3d';\nimport Framebuffer from '../classes/framebuffer';\nimport { assert } from '../utils';\nexport function cloneTextureFrom(refTexture, overrides) {\n  assert(refTexture instanceof Texture2D || refTexture instanceof TextureCube || refTexture instanceof Texture3D);\n  var TextureType = refTexture.constructor;\n  var gl = refTexture.gl,\n      width = refTexture.width,\n      height = refTexture.height,\n      format = refTexture.format,\n      type = refTexture.type,\n      dataFormat = refTexture.dataFormat,\n      border = refTexture.border,\n      mipmaps = refTexture.mipmaps;\n  var textureOptions = Object.assign({\n    width: width,\n    height: height,\n    format: format,\n    type: type,\n    dataFormat: dataFormat,\n    border: border,\n    mipmaps: mipmaps\n  }, overrides);\n  return new TextureType(gl, textureOptions);\n}\nexport function toFramebuffer(texture, opts) {\n  var gl = texture.gl,\n      width = texture.width,\n      height = texture.height,\n      id = texture.id;\n  var framebuffer = new Framebuffer(gl, Object.assign({}, opts, {\n    id: \"framebuffer-for-\".concat(id),\n    width: width,\n    height: height,\n    attachments: _defineProperty({}, 36064, texture)\n  }));\n  return framebuffer;\n}","map":null,"metadata":{},"sourceType":"module"}