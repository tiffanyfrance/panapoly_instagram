{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { PointLight as BasePointLight } from '@luma.gl/core';\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib';\n\nvar PointLight = function (_BasePointLight) {\n  _inherits(PointLight, _BasePointLight);\n\n  function PointLight(props) {\n    var _this;\n\n    _classCallCheck(this, PointLight);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PointLight).call(this, props));\n    _this.projectedLight = new BasePointLight(props);\n    return _this;\n  }\n\n  _createClass(PointLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref) {\n      var layer = _ref.layer;\n      var viewport = layer.context.viewport;\n      var _layer$props = layer.props,\n          coordinateSystem = _layer$props.coordinateSystem,\n          coordinateOrigin = _layer$props.coordinateOrigin;\n      var position = projectPosition(this.position, {\n        viewport: viewport,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.IDENTITY,\n        fromCoordinateOrigin: [0, 0, 0]\n      });\n      this.projectedLight.position = position;\n      return this.projectedLight;\n    }\n  }]);\n\n  return PointLight;\n}(BasePointLight);\n\nexport { PointLight as default };","map":null,"metadata":{},"sourceType":"module"}