{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { CompositeLayer } from '@deck.gl/core';\nimport { PolygonLayer } from '@deck.gl/layers';\nimport { getS2Polygon } from './s2-utils';\nvar defaultProps = Object.assign({\n  getS2Token: {\n    type: 'accessor',\n    value: function value(d) {\n      return d.token;\n    }\n  }\n}, PolygonLayer.defaultProps);\n\nvar S2Layer = function (_CompositeLayer) {\n  _inherits(S2Layer, _CompositeLayer);\n\n  function S2Layer() {\n    _classCallCheck(this, S2Layer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(S2Layer).apply(this, arguments));\n  }\n\n  _createClass(S2Layer, [{\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          getS2Token = _this$props.getS2Token;\n      var _this$props2 = this.props,\n          elevationScale = _this$props2.elevationScale,\n          extruded = _this$props2.extruded,\n          wireframe = _this$props2.wireframe,\n          filled = _this$props2.filled,\n          stroked = _this$props2.stroked,\n          lineWidthUnits = _this$props2.lineWidthUnits,\n          lineWidthScale = _this$props2.lineWidthScale,\n          lineWidthMinPixels = _this$props2.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props2.lineWidthMaxPixels,\n          lineJointRounded = _this$props2.lineJointRounded,\n          lineMiterLimit = _this$props2.lineMiterLimit,\n          lineDashJustified = _this$props2.lineDashJustified,\n          fp64 = _this$props2.fp64,\n          getElevation = _this$props2.getElevation,\n          getFillColor = _this$props2.getFillColor,\n          getLineColor = _this$props2.getLineColor,\n          getLineWidth = _this$props2.getLineWidth,\n          getLineDashArray = _this$props2.getLineDashArray;\n      var _this$props3 = this.props,\n          updateTriggers = _this$props3.updateTriggers,\n          material = _this$props3.material;\n      var CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n      return new CellLayer({\n        fp64: fp64,\n        filled: filled,\n        wireframe: wireframe,\n        extruded: extruded,\n        elevationScale: elevationScale,\n        stroked: stroked,\n        lineWidthUnits: lineWidthUnits,\n        lineWidthScale: lineWidthScale,\n        lineWidthMinPixels: lineWidthMinPixels,\n        lineWidthMaxPixels: lineWidthMaxPixels,\n        lineJointRounded: lineJointRounded,\n        lineMiterLimit: lineMiterLimit,\n        lineDashJustified: lineDashJustified,\n        material: material,\n        getElevation: getElevation,\n        getFillColor: getFillColor,\n        getLineColor: getLineColor,\n        getLineWidth: getLineWidth,\n        getLineDashArray: getLineDashArray\n      }, this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: {\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth,\n          getLineDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: data,\n        getPolygon: function getPolygon(x) {\n          return getS2Polygon(getS2Token(x));\n        }\n      });\n    }\n  }]);\n\n  return S2Layer;\n}(CompositeLayer);\n\nexport { S2Layer as default };\nS2Layer.layerName = 'S2Layer';\nS2Layer.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}