{"ast":null,"code":"import savePixels from 'save-pixels';\nimport ndarray from 'ndarray';\nimport { bufferToArrayBuffer } from './buffer-to-array-buffer';\nexport function encodeImageToStreamNode(image, options) {\n  var type = options.type ? options.type.replace('image/', '') : 'jpeg';\n  var pixels = ndarray(image.data, [image.width, image.height, 4], [4, image.width * 4, 1], 0);\n  return savePixels(pixels, type, options);\n}\nexport function encodeImageNode(image, options) {\n  var imageStream = encodeImageToStreamNode(image, options);\n  return new Promise(function (resolve) {\n    var buffers = [];\n    imageStream.on('data', function (buffer) {\n      return buffers.push(buffer);\n    });\n    imageStream.on('end', function () {\n      var buffer = Buffer.concat(buffers);\n      resolve(bufferToArrayBuffer(buffer));\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}