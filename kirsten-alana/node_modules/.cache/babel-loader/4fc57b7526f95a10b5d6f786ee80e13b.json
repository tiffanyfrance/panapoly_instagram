{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nimport { concatenateArrayBuffers } from '../javascript-utils/memory-copy-utils';\nimport { TextDecoder, TextEncoder } from '../javascript-utils/text-encoding';\nexport function forEach(_x7, _x8) {\n  return _forEach.apply(this, arguments);\n}\n\nfunction _forEach() {\n  _forEach = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5(iterator, visitor) {\n    var _ref, done, value, cancel;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 3;\n            return iterator.next();\n\n          case 3:\n            _ref = _context5.sent;\n            done = _ref.done;\n            value = _ref.value;\n\n            if (!done) {\n              _context5.next = 9;\n              break;\n            }\n\n            iterator[\"return\"]();\n            return _context5.abrupt(\"return\");\n\n          case 9:\n            cancel = visitor(value);\n\n            if (!cancel) {\n              _context5.next = 12;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 12:\n            _context5.next = 0;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _forEach.apply(this, arguments);\n}\n\nexport function concatenateAsyncIterator(_x9) {\n  return _concatenateAsyncIterator.apply(this, arguments);\n}\n\nfunction _concatenateAsyncIterator() {\n  _concatenateAsyncIterator = _asyncToGenerator(_regeneratorRuntime.mark(function _callee6(asyncIterator) {\n    var arrayBuffer, string, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            arrayBuffer = new ArrayBuffer();\n            string = '';\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context6.prev = 4;\n            _iterator = _asyncIterator(asyncIterator);\n\n          case 6:\n            _context6.next = 8;\n            return _iterator.next();\n\n          case 8:\n            _step = _context6.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context6.next = 12;\n            return _step.value;\n\n          case 12:\n            _value = _context6.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context6.next = 19;\n              break;\n            }\n\n            chunk = _value;\n\n            if (typeof chunk === 'string') {\n              string += chunk;\n            } else {\n              arrayBuffer = concatenateArrayBuffers(arrayBuffer, chunk);\n            }\n\n          case 16:\n            _iteratorNormalCompletion = true;\n            _context6.next = 6;\n            break;\n\n          case 19:\n            _context6.next = 25;\n            break;\n\n          case 21:\n            _context6.prev = 21;\n            _context6.t0 = _context6[\"catch\"](4);\n            _didIteratorError = true;\n            _iteratorError = _context6.t0;\n\n          case 25:\n            _context6.prev = 25;\n            _context6.prev = 26;\n\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context6.next = 30;\n              break;\n            }\n\n            _context6.next = 30;\n            return _iterator[\"return\"]();\n\n          case 30:\n            _context6.prev = 30;\n\n            if (!_didIteratorError) {\n              _context6.next = 33;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 33:\n            return _context6.finish(30);\n\n          case 34:\n            return _context6.finish(25);\n\n          case 35:\n            return _context6.abrupt(\"return\", arrayBuffer || string);\n\n          case 36:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[4, 21, 25, 35], [26,, 30, 34]]);\n  }));\n  return _concatenateAsyncIterator.apply(this, arguments);\n}\n\nexport function textDecoderAsyncIterator(_x, _x2) {\n  return _textDecoderAsyncIterator.apply(this, arguments);\n}\n\nfunction _textDecoderAsyncIterator() {\n  _textDecoderAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(arrayBufferIterator, options) {\n    var textDecoder, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, arrayBuffer;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            textDecoder = new TextDecoder(options);\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context.prev = 3;\n            _iterator2 = _asyncIterator(arrayBufferIterator);\n\n          case 5:\n            _context.next = 7;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 7:\n            _step2 = _context.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context.next = 11;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 11:\n            _value2 = _context.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context.next = 19;\n              break;\n            }\n\n            arrayBuffer = _value2;\n            _context.next = 16;\n            return typeof arrayBuffer === 'string' ? arrayBuffer : textDecoder.decode(arrayBuffer, {\n              stream: true\n            });\n\n          case 16:\n            _iteratorNormalCompletion2 = true;\n            _context.next = 5;\n            break;\n\n          case 19:\n            _context.next = 25;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t0;\n\n          case 25:\n            _context.prev = 25;\n            _context.prev = 26;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 30;\n            return _awaitAsyncGenerator(_iterator2[\"return\"]());\n\n          case 30:\n            _context.prev = 30;\n\n            if (!_didIteratorError2) {\n              _context.next = 33;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 33:\n            return _context.finish(30);\n\n          case 34:\n            return _context.finish(25);\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 21, 25, 35], [26,, 30, 34]]);\n  }));\n  return _textDecoderAsyncIterator.apply(this, arguments);\n}\n\nexport function textEncoderAsyncIterator(_x3, _x4) {\n  return _textEncoderAsyncIterator.apply(this, arguments);\n}\n\nfunction _textEncoderAsyncIterator() {\n  _textEncoderAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee2(textIterator, options) {\n    var textEncoder, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _value3, text;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            textEncoder = new TextEncoder();\n            _iteratorNormalCompletion3 = true;\n            _didIteratorError3 = false;\n            _context2.prev = 3;\n            _iterator3 = _asyncIterator(textIterator);\n\n          case 5:\n            _context2.next = 7;\n            return _awaitAsyncGenerator(_iterator3.next());\n\n          case 7:\n            _step3 = _context2.sent;\n            _iteratorNormalCompletion3 = _step3.done;\n            _context2.next = 11;\n            return _awaitAsyncGenerator(_step3.value);\n\n          case 11:\n            _value3 = _context2.sent;\n\n            if (_iteratorNormalCompletion3) {\n              _context2.next = 19;\n              break;\n            }\n\n            text = _value3;\n            _context2.next = 16;\n            return typeof text === 'string' ? textEncoder.encode(text) : text;\n\n          case 16:\n            _iteratorNormalCompletion3 = true;\n            _context2.next = 5;\n            break;\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context2.t0;\n\n          case 25:\n            _context2.prev = 25;\n            _context2.prev = 26;\n\n            if (!(!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null)) {\n              _context2.next = 30;\n              break;\n            }\n\n            _context2.next = 30;\n            return _awaitAsyncGenerator(_iterator3[\"return\"]());\n\n          case 30:\n            _context2.prev = 30;\n\n            if (!_didIteratorError3) {\n              _context2.next = 33;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 33:\n            return _context2.finish(30);\n\n          case 34:\n            return _context2.finish(25);\n\n          case 35:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 21, 25, 35], [26,, 30, 34]]);\n  }));\n  return _textEncoderAsyncIterator.apply(this, arguments);\n}\n\nexport function lineAsyncIterator(_x5) {\n  return _lineAsyncIterator.apply(this, arguments);\n}\n\nfunction _lineAsyncIterator() {\n  _lineAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee3(textIterator) {\n    var previous, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _value4, textChunk, eolIndex, line;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            previous = '';\n            _iteratorNormalCompletion4 = true;\n            _didIteratorError4 = false;\n            _context3.prev = 3;\n            _iterator4 = _asyncIterator(textIterator);\n\n          case 5:\n            _context3.next = 7;\n            return _awaitAsyncGenerator(_iterator4.next());\n\n          case 7:\n            _step4 = _context3.sent;\n            _iteratorNormalCompletion4 = _step4.done;\n            _context3.next = 11;\n            return _awaitAsyncGenerator(_step4.value);\n\n          case 11:\n            _value4 = _context3.sent;\n\n            if (_iteratorNormalCompletion4) {\n              _context3.next = 26;\n              break;\n            }\n\n            textChunk = _value4;\n            previous += textChunk;\n            eolIndex = void 0;\n\n          case 16:\n            if (!((eolIndex = previous.indexOf('\\n')) >= 0)) {\n              _context3.next = 23;\n              break;\n            }\n\n            line = previous.slice(0, eolIndex + 1);\n            previous = previous.slice(eolIndex + 1);\n            _context3.next = 21;\n            return line;\n\n          case 21:\n            _context3.next = 16;\n            break;\n\n          case 23:\n            _iteratorNormalCompletion4 = true;\n            _context3.next = 5;\n            break;\n\n          case 26:\n            _context3.next = 32;\n            break;\n\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3[\"catch\"](3);\n            _didIteratorError4 = true;\n            _iteratorError4 = _context3.t0;\n\n          case 32:\n            _context3.prev = 32;\n            _context3.prev = 33;\n\n            if (!(!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null)) {\n              _context3.next = 37;\n              break;\n            }\n\n            _context3.next = 37;\n            return _awaitAsyncGenerator(_iterator4[\"return\"]());\n\n          case 37:\n            _context3.prev = 37;\n\n            if (!_didIteratorError4) {\n              _context3.next = 40;\n              break;\n            }\n\n            throw _iteratorError4;\n\n          case 40:\n            return _context3.finish(37);\n\n          case 41:\n            return _context3.finish(32);\n\n          case 42:\n            if (!(previous.length > 0)) {\n              _context3.next = 45;\n              break;\n            }\n\n            _context3.next = 45;\n            return previous;\n\n          case 45:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 28, 32, 42], [33,, 37, 41]]);\n  }));\n  return _lineAsyncIterator.apply(this, arguments);\n}\n\nexport function numberedLineAsyncIterator(_x6) {\n  return _numberedLineAsyncIterator.apply(this, arguments);\n}\n\nfunction _numberedLineAsyncIterator() {\n  _numberedLineAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee4(lineIterator) {\n    var counter, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _value5, line;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            counter = 1;\n            _iteratorNormalCompletion5 = true;\n            _didIteratorError5 = false;\n            _context4.prev = 3;\n            _iterator5 = _asyncIterator(lineIterator);\n\n          case 5:\n            _context4.next = 7;\n            return _awaitAsyncGenerator(_iterator5.next());\n\n          case 7:\n            _step5 = _context4.sent;\n            _iteratorNormalCompletion5 = _step5.done;\n            _context4.next = 11;\n            return _awaitAsyncGenerator(_step5.value);\n\n          case 11:\n            _value5 = _context4.sent;\n\n            if (_iteratorNormalCompletion5) {\n              _context4.next = 20;\n              break;\n            }\n\n            line = _value5;\n            _context4.next = 16;\n            return {\n              counter: counter,\n              line: line\n            };\n\n          case 16:\n            counter++;\n\n          case 17:\n            _iteratorNormalCompletion5 = true;\n            _context4.next = 5;\n            break;\n\n          case 20:\n            _context4.next = 26;\n            break;\n\n          case 22:\n            _context4.prev = 22;\n            _context4.t0 = _context4[\"catch\"](3);\n            _didIteratorError5 = true;\n            _iteratorError5 = _context4.t0;\n\n          case 26:\n            _context4.prev = 26;\n            _context4.prev = 27;\n\n            if (!(!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null)) {\n              _context4.next = 31;\n              break;\n            }\n\n            _context4.next = 31;\n            return _awaitAsyncGenerator(_iterator5[\"return\"]());\n\n          case 31:\n            _context4.prev = 31;\n\n            if (!_didIteratorError5) {\n              _context4.next = 34;\n              break;\n            }\n\n            throw _iteratorError5;\n\n          case 34:\n            return _context4.finish(31);\n\n          case 35:\n            return _context4.finish(26);\n\n          case 36:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 22, 26, 36], [27,, 31, 35]]);\n  }));\n  return _numberedLineAsyncIterator.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}