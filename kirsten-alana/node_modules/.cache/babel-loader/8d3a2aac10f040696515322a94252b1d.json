{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { ArcLayer } from '@deck.gl/layers';\nimport vs from './great-circle-vertex.glsl';\n\nvar GreatCircleLayer = function (_ArcLayer) {\n  _inherits(GreatCircleLayer, _ArcLayer);\n\n  function GreatCircleLayer() {\n    _classCallCheck(this, GreatCircleLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GreatCircleLayer).apply(this, arguments));\n  }\n\n  _createClass(GreatCircleLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var shaders = Object.assign({}, _get(_getPrototypeOf(GreatCircleLayer.prototype), \"getShaders\", this).call(this), {\n        vs: vs,\n        modules: ['picking', 'project32']\n      });\n      return shaders;\n    }\n  }]);\n\n  return GreatCircleLayer;\n}(ArcLayer);\n\nexport { GreatCircleLayer as default };\nGreatCircleLayer.layerName = 'GreatCircleLayer';","map":null,"metadata":{},"sourceType":"module"}