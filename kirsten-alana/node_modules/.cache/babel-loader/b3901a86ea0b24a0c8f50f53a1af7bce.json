{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport { Vector3 } from 'math.gl';\nimport { uid } from '../utils';\nvar DEFAULT_LIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_LIGHT_INTENSITY = 1.0;\nvar DEFAULT_ATTENUATION = [0, 0, 1];\nvar DEFAULT_LIGHT_DIRECTION = [0.0, 0.0, -1.0];\nvar DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nvar Light = function Light() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Light);\n\n  this.id = props.id || uid('light');\n  var _props$color = props.color,\n      color = _props$color === void 0 ? DEFAULT_LIGHT_COLOR : _props$color;\n  this.color = color;\n  var _props$intensity = props.intensity,\n      intensity = _props$intensity === void 0 ? DEFAULT_LIGHT_INTENSITY : _props$intensity;\n  this.intensity = intensity;\n};\n\nexport var AmbientLight = function (_Light) {\n  _inherits(AmbientLight, _Light);\n\n  function AmbientLight() {\n    var _this;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AmbientLight);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AmbientLight).call(this, props));\n    _this.type = 'ambient';\n    return _this;\n  }\n\n  return AmbientLight;\n}(Light);\nexport var DirectionalLight = function (_Light2) {\n  _inherits(DirectionalLight, _Light2);\n\n  function DirectionalLight() {\n    var _this2;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DirectionalLight);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DirectionalLight).call(this, props));\n    _this2.type = 'directional';\n    var _props$direction = props.direction,\n        direction = _props$direction === void 0 ? DEFAULT_LIGHT_DIRECTION : _props$direction;\n    _this2.direction = new Vector3(direction).normalize().toArray();\n    return _this2;\n  }\n\n  return DirectionalLight;\n}(Light);\nexport var PointLight = function (_Light3) {\n  _inherits(PointLight, _Light3);\n\n  function PointLight() {\n    var _this3;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PointLight);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(PointLight).call(this, props));\n    _this3.type = 'point';\n    var _props$position = props.position,\n        position = _props$position === void 0 ? DEFAULT_LIGHT_POSITION : _props$position;\n    _this3.position = position;\n    _this3.attenuation = _this3._getAttenuation(props);\n    return _this3;\n  }\n\n  _createClass(PointLight, [{\n    key: \"_getAttenuation\",\n    value: function _getAttenuation(props) {\n      if ('attenuation' in props) {\n        return props.attenuation;\n      }\n\n      if ('intensity' in props) {\n        return [0, 0, props.intensity];\n      }\n\n      return DEFAULT_ATTENUATION;\n    }\n  }]);\n\n  return PointLight;\n}(Light);","map":null,"metadata":{},"sourceType":"module"}