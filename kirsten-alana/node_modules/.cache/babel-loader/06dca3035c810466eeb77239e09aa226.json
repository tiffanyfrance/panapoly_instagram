{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyfrance/Projects/panoply/kirsten-alana/src/App.js\";\nimport React, { Component } from 'react';\nimport DeckGL from '@deck.gl/react';\nimport { ScreenGridLayer } from 'deck.gl';\nimport { StaticMap } from 'react-map-gl';\nimport { isWebGL2 } from '@luma.gl/core';\nimport 'mapbox-gl/dist/mapbox-gl.css'; // Set your mapbox access token here\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidGlmZnlsb3UiLCJhIjoiY2p2MWRncG5oMXQ4azRkcXhkb2VoZmlpeCJ9.aMZp7-Gw5-goacW4MOnmow'; // Source data CSV\n// const DATA_URL =\n//   'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/screen-grid/uber-pickup-locations.json'; // eslint-disable-line\n\nconst DATA_URL = 'https://raw.githubusercontent.com/tiffylou/panoply/master/data.json'; // eslint-disable-line\n// Initial viewport settings\n\nconst INITIAL_VIEW_STATE = {\n  longitude: -74.859,\n  latitude: 40.4599,\n  zoom: 5,\n  pitch: 0,\n  bearing: 0\n};\nconst colorRange = [// [255, 255, 178, 25],\n[254, 217, 118, 85], [254, 178, 76, 127], [253, 141, 60, 170], [240, 59, 32, 212], [189, 0, 38, 255]];\n\nconst stopPropagation = evt => evt.stopPropagation();\n/* eslint-disable react/no-deprecated */\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: 0,\n      y: 0,\n      hoveredItems: null,\n      expanded: false\n    };\n    this._onHover = this._onHover.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._closePopup = this._closePopup.bind(this);\n    this._renderhoveredItems = this._renderhoveredItems.bind(this);\n  }\n\n  _onHover(info) {\n    if (this.state.expanded) {\n      return;\n    }\n\n    const x = info.x,\n          y = info.y,\n          object = info.object;\n    const z = info.layer.state.z;\n    const _this$props$showClust = this.props.showCluster,\n          showCluster = _this$props$showClust === void 0 ? true : _this$props$showClust;\n    let hoveredItems = null;\n\n    if (object) {\n      if (showCluster) {\n        hoveredItems = object.zoomLevels[z].points.sort((m1, m2) => m1.year - m2.year);\n      } else {\n        hoveredItems = [object];\n      }\n    }\n\n    this.setState({\n      x,\n      y,\n      hoveredItems,\n      expanded: false\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      expanded: true\n    });\n  }\n\n  _onPopupLoad(ref) {\n    if (ref) {\n      // React events are triggered after native events\n      ref.addEventListener('wheel', stopPropagation);\n    }\n  }\n\n  _closePopup() {\n    this.setState({\n      expanded: false,\n      hoveredItems: null\n    });\n  }\n\n  _renderhoveredItems() {\n    const _this$state = this.state,\n          x = _this$state.x,\n          y = _this$state.y,\n          hoveredItems = _this$state.hoveredItems,\n          expanded = _this$state.expanded;\n\n    if (!hoveredItems) {\n      return null;\n    }\n\n    if (expanded) {\n      return React.createElement(\"div\", {\n        className: \"tooltip interactive\",\n        ref: this._onPopupLoad,\n        style: {\n          left: x,\n          top: y\n        },\n        onMouseLeave: this._closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, hoveredItems.map(({\n        name,\n        year,\n        mass,\n        class: meteorClass\n      }) => {\n        return React.createElement(\"div\", {\n          key: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, name), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Year: \", year || 'unknown'), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Class: \", meteorClass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Mass: \", mass, \"g\"));\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tooltip\",\n      style: {\n        left: x,\n        top: y\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, hoveredItems.slice(0, 20).map(({\n      name,\n      year\n    }) => React.createElement(\"div\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, name, \" \", year ? \"(\".concat(year, \")\") : ''))));\n  }\n\n  _renderLayers() {\n    const _this$props = this.props,\n          _this$props$data = _this$props.data,\n          data = _this$props$data === void 0 ? DATA_URL : _this$props$data,\n          _this$props$cellSize = _this$props.cellSize,\n          cellSize = _this$props$cellSize === void 0 ? 8 : _this$props$cellSize,\n          _this$props$gpuAggreg = _this$props.gpuAggregation,\n          gpuAggregation = _this$props$gpuAggreg === void 0 ? true : _this$props$gpuAggreg,\n          _this$props$aggregati = _this$props.aggregation,\n          aggregation = _this$props$aggregati === void 0 ? 'Sum' : _this$props$aggregati;\n    return [new ScreenGridLayer({\n      id: 'grid',\n      data,\n      getPosition: d => [d.longitude, d.latitude],\n      getWeight: d => d.likes_count,\n      cellSizePixels: cellSize,\n      colorRange,\n      // gpuAggregation,\n      // aggregation,\n      // Enable picking\n      pickable: true,\n      // Update tooltip\n      // onHover: d => setTooltip(d, d.x, d.y)\n      // onHover: info => setTooltip(info, info.x, info.y)\n      onHover: this._onHover,\n      onClick: this._onClick\n    })];\n  }\n\n  _onInitialized(gl) {\n    if (!isWebGL2(gl)) {\n      console.warn('GPU aggregation is not supported'); // eslint-disable-line\n\n      if (this.props.disableGPUAggregation) {\n        this.props.disableGPUAggregation();\n      }\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          viewState = _this$props2.viewState,\n          _this$props2$controll = _this$props2.controller,\n          controller = _this$props2$controll === void 0 ? true : _this$props2$controll,\n          _this$props2$baseMap = _this$props2.baseMap,\n          baseMap = _this$props2$baseMap === void 0 ? true : _this$props2$baseMap;\n    return React.createElement(DeckGL, {\n      layers: this._renderLayers(),\n      initialViewState: INITIAL_VIEW_STATE,\n      onWebGLInitialized: this._onInitialized.bind(this),\n      viewState: viewState,\n      controller: controller,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, baseMap && React.createElement(StaticMap, {\n      reuseMaps: true,\n      mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), this._renderhoveredItems);\n  }\n\n}\n\nfunction setTooltip(object, x, y) {\n  const el = document.getElementById('tooltip');\n  console.log(object);\n\n  if (object) {\n    console.log(\"0\", object.object);\n    if (object.object) console.log(\"a\", object.object.name);\n    el.innerHTML = object.name;\n    el.style.display = 'block';\n    el.style.left = x + 'px';\n    el.style.top = y + 'px';\n  } else {\n    el.style.display = 'none';\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tiffanyfrance/Projects/panoply/kirsten-alana/src/App.js"],"names":["React","Component","DeckGL","ScreenGridLayer","StaticMap","isWebGL2","MAPBOX_TOKEN","DATA_URL","INITIAL_VIEW_STATE","longitude","latitude","zoom","pitch","bearing","colorRange","stopPropagation","evt","App","constructor","props","state","x","y","hoveredItems","expanded","_onHover","bind","_onClick","_closePopup","_renderhoveredItems","info","object","z","layer","showCluster","zoomLevels","points","sort","m1","m2","year","setState","_onPopupLoad","ref","addEventListener","left","top","map","name","mass","class","meteorClass","slice","_renderLayers","data","cellSize","gpuAggregation","aggregation","id","getPosition","d","getWeight","likes_count","cellSizePixels","pickable","onHover","onClick","_onInitialized","gl","console","warn","disableGPUAggregation","render","viewState","controller","baseMap","setTooltip","el","document","getElementById","log","innerHTML","style","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {ScreenGridLayer} from 'deck.gl';\nimport {StaticMap} from 'react-map-gl';\nimport {isWebGL2} from '@luma.gl/core';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n// Set your mapbox access token here\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidGlmZnlsb3UiLCJhIjoiY2p2MWRncG5oMXQ4azRkcXhkb2VoZmlpeCJ9.aMZp7-Gw5-goacW4MOnmow';\n\n// Source data CSV\n// const DATA_URL =\n//   'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/screen-grid/uber-pickup-locations.json'; // eslint-disable-line\n\nconst DATA_URL = 'https://raw.githubusercontent.com/tiffylou/panoply/master/data.json'; // eslint-disable-line\n\n// Initial viewport settings\nconst INITIAL_VIEW_STATE = {\n  longitude: -74.859,\n  latitude: 40.4599,\n  zoom: 5,\n  pitch: 0,\n  bearing: 0\n};\n\nconst colorRange = [\n  // [255, 255, 178, 25],\n  [254, 217, 118, 85],\n  [254, 178, 76, 127],\n  [253, 141, 60, 170],\n  [240, 59, 32, 212],\n  [189, 0, 38, 255]\n];\n\nconst stopPropagation = evt => evt.stopPropagation();\n\n/* eslint-disable react/no-deprecated */\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      x: 0,\n      y: 0,\n      hoveredItems: null,\n      expanded: false\n    };\n    this._onHover = this._onHover.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._closePopup = this._closePopup.bind(this);\n    this._renderhoveredItems = this._renderhoveredItems.bind(this);\n  }\n\n  _onHover(info) {\n    if (this.state.expanded) {\n      return;\n    }\n\n    const {x, y, object} = info;\n    const z = info.layer.state.z;\n    const {showCluster = true} = this.props;\n\n    let hoveredItems = null;\n\n    if (object) {\n      if (showCluster) {\n        hoveredItems = object.zoomLevels[z].points.sort((m1, m2) => m1.year - m2.year);\n      } else {\n        hoveredItems = [object];\n      }\n    }\n\n    this.setState({x, y, hoveredItems, expanded: false});\n  }\n\n  _onClick() {\n    this.setState({expanded: true});\n  }\n\n  _onPopupLoad(ref) {\n    if (ref) {\n      // React events are triggered after native events\n      ref.addEventListener('wheel', stopPropagation);\n    }\n  }\n\n  _closePopup() {\n    this.setState({expanded: false, hoveredItems: null});\n  }\n\n  _renderhoveredItems() {\n    const {x, y, hoveredItems, expanded} = this.state;\n\n    if (!hoveredItems) {\n      return null;\n    }\n\n    if (expanded) {\n      return (\n        <div\n          className=\"tooltip interactive\"\n          ref={this._onPopupLoad}\n          style={{left: x, top: y}}\n          onMouseLeave={this._closePopup}\n        >\n          {hoveredItems.map(({name, year, mass, class: meteorClass}) => {\n            return (\n              <div key={name}>\n                <h5>{name}</h5>\n                <div>Year: {year || 'unknown'}</div>\n                <div>Class: {meteorClass}</div>\n                <div>Mass: {mass}g</div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"tooltip\" style={{left: x, top: y}}>\n        {hoveredItems.slice(0, 20).map(({name, year}) => (\n          <div key={name}>\n            <h5>\n              {name} {year ? `(${year})` : ''}\n            </h5>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  _renderLayers() {\n    const {data = DATA_URL, cellSize = 8, gpuAggregation = true, aggregation = 'Sum'} = this.props;\n    \n    return [\n      new ScreenGridLayer({\n        id: 'grid',\n        data,\n        getPosition: d => [d.longitude, d.latitude],\n        getWeight: d => d.likes_count,\n        cellSizePixels: cellSize,\n        colorRange,\n        // gpuAggregation,\n        // aggregation,\n        // Enable picking\n        pickable: true,\n        // Update tooltip\n        // onHover: d => setTooltip(d, d.x, d.y)\n        // onHover: info => setTooltip(info, info.x, info.y)\n        onHover: this._onHover,\n        onClick: this._onClick,\n      })\n    ];\n  }\n\n  _onInitialized(gl) {\n    if (!isWebGL2(gl)) {\n      console.warn('GPU aggregation is not supported'); // eslint-disable-line\n      if (this.props.disableGPUAggregation) {\n        this.props.disableGPUAggregation();\n      }\n    }\n  }\n\n  render() {\n    const {viewState, controller = true, baseMap = true} = this.props;\n\n    return (\n      <DeckGL\n        layers={this._renderLayers()}\n        initialViewState={INITIAL_VIEW_STATE}\n        onWebGLInitialized={this._onInitialized.bind(this)}\n        viewState={viewState}\n        controller={controller}\n      >\n        {baseMap && (\n          <StaticMap\n            reuseMaps\n            mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n        )}\n        {this._renderhoveredItems}\n      </DeckGL>\n    );\n  }\n}\n\nfunction setTooltip(object, x, y) {\n  const el = document.getElementById('tooltip');\n  console.log(object)\n  if (object) {\n    console.log(\"0\", object.object)\n    if(object.object) \n      console.log(\"a\", object.object.name)\n    el.innerHTML = object.name;\n    el.style.display = 'block';\n    el.style.left = x + 'px';\n    el.style.top = y + 'px';\n  } else {\n    el.style.display = 'none';\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}